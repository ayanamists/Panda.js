2:"$Sreact.fragment"
3:I[75164,["645","static/chunks/61af6f7f-9cff01d0fc100f98.js","469","static/chunks/469-7ee2e4c850f58403.js","861","static/chunks/861-2893a7c032654c11.js","827","static/chunks/app/%5Blocale%5D/posts/%5Bslug%5D/page-adf657eca4f78e61.js"],"default"]
4:I[65469,["645","static/chunks/61af6f7f-9cff01d0fc100f98.js","469","static/chunks/469-7ee2e4c850f58403.js","861","static/chunks/861-2893a7c032654c11.js","827","static/chunks/app/%5Blocale%5D/posts/%5Bslug%5D/page-adf657eca4f78e61.js"],""]
5:I[39926,["645","static/chunks/61af6f7f-9cff01d0fc100f98.js","469","static/chunks/469-7ee2e4c850f58403.js","861","static/chunks/861-2893a7c032654c11.js","827","static/chunks/app/%5Blocale%5D/posts/%5Bslug%5D/page-adf657eca4f78e61.js"],"default"]
f:I[27377,["645","static/chunks/61af6f7f-9cff01d0fc100f98.js","469","static/chunks/469-7ee2e4c850f58403.js","861","static/chunks/861-2893a7c032654c11.js","827","static/chunks/app/%5Blocale%5D/posts/%5Bslug%5D/page-adf657eca4f78e61.js"],"default"]
10:I[78703,[],""]
13:I[53751,[],""]
14:I[59576,["706","static/chunks/706-97ed238ee5a03fb5.js","469","static/chunks/469-7ee2e4c850f58403.js","911","static/chunks/911-e9f556f9b03e931c.js","373","static/chunks/373-fbdb9516436dc720.js","203","static/chunks/app/%5Blocale%5D/layout-a565b40c48425316.js"],"Providers"]
6:T6d6,<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><mi>α</mi><mo>→</mo><mi>β</mi><mo separator="true">,</mo><mi>α</mi><mtext> list</mtext><mo stretchy="false">)</mo><mo>→</mo><mi>β</mi><mtext> list</mtext></mrow><annotation encoding="application/x-tex">
(α → β , α\ \text{list}) → β \ \text{list}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace"> </span><span class="mord text"><span class="mord">list</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mspace"> </span><span class="mord text"><span class="mord">list</span></span></span></span></span></span>7:T4b1,<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">Λ</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>λ</mi><mo stretchy="false">(</mo><mi>x</mi><mo>:</mo><mi>t</mi><mo stretchy="false">)</mo><mi mathvariant="normal">.</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">
Λt.λ (x:t).x
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Λ</span><span class="mord mathnormal">t</span><span class="mord">.</span><span class="mord mathnormal">λ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mord">.</span><span class="mord mathnormal">x</span></span></span></span></span>8:Tfc1,<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi mathvariant="normal">Λ</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>λ</mi><mo stretchy="false">(</mo><mi>x</mi><mo>:</mo><mi>t</mi><mo stretchy="false">)</mo><mi mathvariant="normal">.</mi><mi>x</mi><mo stretchy="false">)</mo><mtext>Int</mtext><mo stretchy="false">)</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>⇒</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo stretchy="false">(</mo><mi>λ</mi><mo stretchy="false">(</mo><mi>x</mi><mo>:</mo><mtext>Int</mtext><mo stretchy="false">)</mo><mi mathvariant="normal">.</mi><mi>x</mi><mo stretchy="false">)</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>⇒</mo><mn>1</mn></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">
\begin{aligned}
((Λ t. λ (x:t). x) \text{Int})1 &amp; \Rightarrow \\
(λ (x:\text{Int}). x) 1 &amp; \Rightarrow 1
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">((</span><span class="mord">Λ</span><span class="mord mathnormal">t</span><span class="mord">.</span><span class="mord mathnormal">λ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mord">.</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord text"><span class="mord">Int</span></span><span class="mclose">)</span><span class="mord">1</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal">λ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord text"><span class="mord">Int</span></span><span class="mclose">)</span><span class="mord">.</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span></span></span></span></span></span></span>9:T1a45,<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mfrac><mrow><mi mathvariant="normal">Γ</mi><mo separator="true">,</mo><mo stretchy="false">(</mo><mi>x</mi><mo>:</mo><msub><mi>t</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>⊢</mo><mi>y</mi><mo>:</mo><msub><mi>t</mi><mn>2</mn></msub></mrow><mrow><mi mathvariant="normal">Γ</mi><mo>⊢</mo><mo stretchy="false">(</mo><mi>λ</mi><mo stretchy="false">(</mo><mi>x</mi><mo>:</mo><msub><mi>t</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mi mathvariant="normal">.</mi><mi>y</mi><mo stretchy="false">)</mo><mo>:</mo><msub><mi>t</mi><mn>1</mn></msub><mo>→</mo><msub><mi>t</mi><mn>2</mn></msub></mrow></mfrac><mrow></mrow></msub></mrow><annotation encoding="application/x-tex">
  {\frac{Γ , (x:t_1) ⊢ y:t_2}{Γ ⊢ (λ(x:t_1).y):t_1 → t_2}}_{}
  </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.4127em;vertical-align:-0.9857em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Γ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊢</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord mathnormal">λ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Γ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊢</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.9857em;"><span style="top:-1.0143em;margin-right:0.05em;"><span class="pstrut" style="height:2em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9857em;"><span></span></span></span></span></span></span></span></span></span></span>a:T107e,<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">Γ</mi><mo separator="true">,</mo><mi>A</mi><mo>:</mo><mrow><mi mathvariant="bold">t</mi><mi mathvariant="bold">y</mi><mi mathvariant="bold">p</mi><mi mathvariant="bold">e</mi></mrow><mo>⊢</mo><mi>x</mi><mo>:</mo><msub><mi>t</mi><mn>1</mn></msub></mrow><mrow><mi mathvariant="normal">Γ</mi><mo>⊢</mo><mo stretchy="false">(</mo><mi mathvariant="normal">Λ</mi><mi>A</mi><mi mathvariant="normal">.</mi><mi>x</mi><mo stretchy="false">)</mo><mo>:</mo><mi mathvariant="normal">∀</mi><mi>A</mi><mi mathvariant="normal">.</mi><msub><mi>t</mi><mn>1</mn></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">
  \frac{Γ , A:\bold{type} ⊢ x:t_1 }{ Γ ⊢ (Λ A.x): ∀ A. t_1}
  </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.3074em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Γ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊢</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord">Λ</span><span class="mord mathnormal">A</span><span class="mord">.</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">∀</span><span class="mord mathnormal">A</span><span class="mord">.</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Γ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathbf">type</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊢</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span>b:T1491,<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">Γ</mi><mo>⊢</mo><mi>x</mi><mo>:</mo><mo stretchy="false">(</mo><msub><mi>t</mi><mn>1</mn></msub><mo>→</mo><msub><mi>t</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>y</mi><mo>:</mo><msub><mi>t</mi><mn>1</mn></msub></mrow><mrow><mi mathvariant="normal">Γ</mi><mo>⊢</mo><mo stretchy="false">(</mo><mi>x</mi><mtext> </mtext><mi>y</mi><mo stretchy="false">)</mo><mo>:</mo><msub><mi>t</mi><mn>2</mn></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">
  \frac{Γ ⊢ x:(t_1 → t_2), y:t_1}{Γ ⊢ (x\ y): t_2}
  </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Γ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊢</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Γ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊢</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span>c:T12a1,<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">Γ</mi><mo>⊢</mo><mi>x</mi><mo>:</mo><mo stretchy="false">(</mo><mi mathvariant="normal">∀</mi><mi>A</mi><mi mathvariant="normal">.</mi><msub><mi>t</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mtext>    </mtext><mo stretchy="false">(</mo><mi>B</mi><mo>:</mo><mrow><mi mathvariant="bold">t</mi><mi mathvariant="bold">y</mi><mi mathvariant="bold">p</mi><mi mathvariant="bold">e</mi></mrow><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">Γ</mi><mo>⊢</mo><mo stretchy="false">(</mo><mi>x</mi><mtext> </mtext><mi>B</mi><mo stretchy="false">)</mo><mo>:</mo><mo stretchy="false">[</mo><mi>B</mi><mi mathvariant="normal">/</mi><mi>A</mi><mo stretchy="false">]</mo><msub><mi>t</mi><mn>1</mn></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">
  \frac{Γ ⊢ x:(∀A.t_1)\  \ \ \ (B:\bold{type})}{ Γ ⊢ (x\ B):[B/A]t_1}
  </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Γ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊢</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">/</span><span class="mord mathnormal">A</span><span class="mclose">]</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Γ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊢</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord">∀</span><span class="mord mathnormal">A</span><span class="mord">.</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathbf">type</span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span>d:Taa8,source>: In function 'int main()':
<source>:17:8: error: no matching function for call to 'max(A, A)'
   17 |     max(A(), A());
      |     ~~~^~~~~~~~~~
<source>:6:6: note: candidate: 'template<class T>  requires  equality_comparable<T> bool max(T, T)'
    6 | bool max(T x, T y) {
      |      ^~~
<source>:6:6: note:   template argument deduction/substitution failed:
<source>:6:6: note: constraints not satisfied
In file included from /opt/compiler-explorer/gcc-11.2.0/include/C++/11.2.0/compare:39,
                 from /opt/compiler-explorer/gcc-11.2.0/include/C++/11.2.0/bits/stl_pair.h:65,
                 from /opt/compiler-explorer/gcc-11.2.0/include/C++/11.2.0/bits/stl_algobase.h:64,
                 from /opt/compiler-explorer/gcc-11.2.0/include/C++/11.2.0/bits/char_traits.h:39,
                 from /opt/compiler-explorer/gcc-11.2.0/include/C++/11.2.0/ios:40,
                 from /opt/compiler-explorer/gcc-11.2.0/include/C++/11.2.0/ostream:38,
                 from /opt/compiler-explorer/gcc-11.2.0/include/C++/11.2.0/iostream:39,
                 from <source>:1:
/opt/compiler-explorer/gcc-11.2.0/include/C++/11.2.0/concepts: In substitution of 'template<class T>  requires  equality_comparable<T> bool max(T, T) [with T = A]':
<source>:17:8:   required from here
/opt/compiler-explorer/gcc-11.2.0/include/C++/11.2.0/concepts:280:15:   required for the satisfaction of '__weakly_eq_cmp_with<_Tp, _Tp>' [with _Tp = A]
/opt/compiler-explorer/gcc-11.2.0/include/C++/11.2.0/concepts:290:13:   required for the satisfaction of 'equality_comparable<T>' [with T = A]
/opt/compiler-explorer/gcc-11.2.0/include/C++/11.2.0/concepts:281:4:   in requirements with 'std::remove_reference_t<_Tp>& __t', 'std::remove_reference_t<_Up>& __u' [with _Up = A; _Tp = A]
/opt/compiler-explorer/gcc-11.2.0/include/C++/11.2.0/concepts:282:17: note: the required expression '(__t == __u)' is invalid
  282 |           { __t == __u } -> __boolean_testable;
      |             ~~~~^~~~~~
/opt/compiler-explorer/gcc-11.2.0/include/C++/11.2.0/concepts:283:17: note: the required expression '(__t != __u)' is invalid
  283 |           { __t != __u } -> __boolean_testable;
      |             ~~~~^~~~~~
/opt/compiler-explorer/gcc-11.2.0/include/C++/11.2.0/concepts:284:17: note: the required expression '(__u == __t)' is invalid
  284 |           { __u == __t } -> __boolean_testable;
      |             ~~~~^~~~~~
/opt/compiler-explorer/gcc-11.2.0/include/C++/11.2.0/concepts:285:17: note: the required expression '(__u != __t)' is invalid
  285 |           { __u != __t } -> __boolean_testable;
      |             ~~~~^~~~~~
cc1plus: note: set '-fconcepts-diagnostics-depth=' to at least 2 for more detail
Compiler returned: 1e:T8c7,n file included from /opt/compiler-explorer/gcc-11.2.0/include/c++/11.2.0/bits/stl_algobase.h:71,
                 from /opt/compiler-explorer/gcc-11.2.0/include/c++/11.2.0/bits/char_traits.h:39,
                 from /opt/compiler-explorer/gcc-11.2.0/include/c++/11.2.0/ios:40,
                 from /opt/compiler-explorer/gcc-11.2.0/include/c++/11.2.0/ostream:38,
                 from /opt/compiler-explorer/gcc-11.2.0/include/c++/11.2.0/iostream:39,
                 from <source>:1:
/opt/compiler-explorer/gcc-11.2.0/include/c++/11.2.0/bits/predefined_ops.h: In instantiation of 'constexpr bool __gnu_cxx::__ops::_Iter_less_iter::operator()(_Iterator1, _Iterator2) const [with _Iterator1 = __gnu_cxx::__normal_iterator<A*, std::vector<A> >; _Iterator2 = __gnu_cxx::__normal_iterator<A*, std::vector<A> >]':
/opt/compiler-explorer/gcc-11.2.0/include/c++/11.2.0/bits/stl_algo.h:1826:14:   required from 'constexpr void std::__insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<A*, std::vector<A> >; _Compare = __gnu_cxx::__ops::_Iter_less_iter]'
/opt/compiler-explorer/gcc-11.2.0/include/c++/11.2.0/bits/stl_algo.h:1866:25:   required from 'constexpr void std::__final_insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<A*, std::vector<A> >; _Compare = __gnu_cxx::__ops::_Iter_less_iter]'
/opt/compiler-explorer/gcc-11.2.0/include/c++/11.2.0/bits/stl_algo.h:1957:31:   required from 'constexpr void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<A*, std::vector<A> >; _Compare = __gnu_cxx::__ops::_Iter_less_iter]'
/opt/compiler-explorer/gcc-11.2.0/include/c++/11.2.0/bits/stl_algo.h:4842:18:   required from 'constexpr void std::sort(_RAIter, _RAIter) [with _RAIter = __gnu_cxx::__normal_iterator<A*, std::vector<A> >]'
<source>:10:14:   required from here
/opt/compiler-explorer/gcc-11.2.0/include/c++/11.2.0/bits/predefined_ops.h:45:23: error: no match for 'operator<' (operand types are 'A' and 'A')
   45 |       { return *__it1 < *__it2; }
      |                ~~~~~~~^~~~~~~~

剩下还有80多行11:["locale","zh-cn","d"]
12:["slug","parametric-poly","d"]
0:["NDYGDYgGb0fuEYnBXphxU",[[["",{"children":[["locale","zh-cn","d"],{"children":["posts",{"children":[["slug","parametric-poly","d"],{"children":["__PAGE__?{\"locale\":\"zh-cn\",\"slug\":\"parametric-poly\"}",{}]}]}]}]},"$undefined","$undefined",true],["",{"children":[["locale","zh-cn","d"],{"children":["posts",{"children":[["slug","parametric-poly","d"],{"children":["__PAGE__",{},[["$L1",["$","div",null,{"children":[["$","h1",null,{"className":"text-4xl font-bold mb-2","children":"C++ 模板与参数多态的根本区别"}],["$","div",null,{"className":"text-sm text-gray-500 mb-5","children":"9/14/2021"}],["$","$2","0",{"children":[["$","$L3",null,{"children":[["$","ul","0",{"children":[["$","li","0",{"children":[["$","a","0",{"href":"#c-模板与参数多态","id":"toc-c-模板与参数多态","children":["C++"," ","模板与参数多态"]}]]}],["$","li","1",{"children":[["$","a","0",{"href":"#到底什么是参数多态","id":"toc-到底什么是参数多态","children":["到底什么是参数多态"]}]]}],["$","li","2",{"children":[["$","a","0",{"href":"#c模板满足命题1.吗","id":"toc-c模板满足命题1.吗","children":["C++模板满足命题1.吗？"]}]]}],["$","li","3",{"children":[["$","a","0",{"href":"#类型类影响问题吗","id":"toc-类型类影响问题吗","children":["类型类影响问题吗？"]}]]}],["$","li","4",{"children":[["$","a","0",{"href":"#真假泛型性能更好","id":"toc-真假泛型性能更好","children":["真假泛型？性能更好？"]}]]}],["$","li","5",{"children":[["$","a","0",{"href":"#concept-能解决问题吗","id":"toc-concept-能解决问题吗","children":["Concept:"," ","能解决问题吗？"]}]]}]]}]]}],["$","article","1",{"children":[["$","h2",null,{"className":"text-3xl","id":"c-模板与参数多态","children":[["$","$L4",null,{"href":"#c-模板与参数多态","color":"secondary","className":"pr-3 no-underline hover:underline text-primary font-sans","children":"#"}],["C++"," ","模板与参数多态"]]}],["$","p",null,{"children":["模板(template)是一种"," ","C++"," ","语言特性，类似于："]}],["$","$L5","2",{"className":"cpp","children":["template <class T>\nT id(T x) {\n    return x;\n}"]}],["$","p",null,{"children":["这里的"," ",["$","code","0",{"children":["T"]}]," ","可以是任意类型。很多人都注意到了这与参数多态(parametric"," ","polymorphism)的相似性，更有甚者直接把模板机制看作是一种参数多态。比如这份",["$","a","1",{"href":"https://www.cs.bham.ac.uk/~hxt/2015/c-plus-plus/templates-slides.pdf","children":["ppt"]}],"和这个",["$","a","2",{"href":"https://catonmat.net/cpp-polymorphism","children":["网页"]}],"。"]}],["$","p",null,{"children":["然而这篇博客中，我将会说明，",["$","strong","0",{"children":["无论"," ","C++"," ","模板到底是不是一个好的语言特性，它都和参数多态有根本性的区别"]}],"。"]}],["$","h2",null,{"className":"text-3xl","id":"到底什么是参数多态","children":[["$","$L4",null,{"href":"#到底什么是参数多态","color":"secondary","className":"pr-3 no-underline hover:underline text-primary font-sans","children":"#"}],["到底什么是参数多态"]]}],["$","p",null,{"children":["参数多态的历史要追溯一份讲义(",["$","a","0",{"href":"https://link.springer.com/article/10.1023%2FA%3A1010000313106","children":["Fundamental"," ","Concepts"," ","in"," ","Programming"," ","Languages"]}],")，讲义虽然主要描述的是"," ","CPL"," ","语言，但是实际上这一段应该描述的是"," ","LISP"," ","的"," ","MAP"," ","函数："]}],["$","blockquote","7",{"children":[["$","p",null,{"children":["Parametric"," ","polymorphism"," ","is"," ","more"," ","regular"," ","and"," ","may"," ","be"," ","illustrated"," ","by"," ","an"," ","example."," ","Suppose"," ","f"," ","is"," ","a"," ","function"," ","whose"," ","argument"," ","is"," ","of"," ","type"," ","α"," ","and"," ","whose"," ","results"," ","is"," ","of"," ","β"," ","(so"," ","that"," ","the"," ","type"," ","of"," ","f"," ","might"," ","be"," ","written"," ","α"," ","⇒"," ","β),"," ","and"," ","that"," ","L"," ","is"," ","a"," ","list"," ","whose"," ","elements"," ","are"," ","all"," ","of"," ","type"," ","α"," ","(so"," ","that"," ","the"," ","type"," ","of"," ","L"," ","is"," ","α"," ","list)."," ","We"," ","can"," ","imagine"," ","a"," ","function,"," ","say"," ","Map,"," ","which"," ","applies"," ","f"," ","in"," ","turn"," ","to"," ","each"," ","member"," ","of"," ","L"," ","and"," ","makes"," ","a"," ","list"," ","of"," ","the"," ","results."," ","Thus"," ","Map[f,L]"," ","will"," ","produce"," ","a"," ","β"," ","list."," ","We"," ","would"," ","like"," ","Map"," ","to"," ","work"," ","on"," ","all"," ","types"," ","of"," ","list"," ","provided"," ","f"," ","was"," ","a"," ","suitable"," ","function,"," ","so"," ","that"," ","Map"," ","would"," ","have"," ","to"," ","be"," ","polymorphic."," ","However"," ","its"," ","polymorphism"," ","is"," ","of"," ","a"," ","particularly"," ","simple"," ","parametric"," ","type"," ","which"," ","could"," ","be"," ","written"]}]]}],["$","div",null,{"children":[["$","div",null,{"className":"overflow-auto","children":["$","div",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"$6"}}]}]]}],["$","p",null,{"children":["1975"," ","年的"," ","ML"," ","语言在类型系统的层面上实现了这种多态。在"," ","ML"," ","类语言中，一个函数的类型中可以含有类型变量，例如如下的",["$","code","0",{"children":["id"]}],"函数："]}],["$","$L5","10",{"className":"ocaml","children":["let id (x:'a) = x"]}],["$","p",null,{"children":[["$","code","0",{"children":["id"]}],"函数的类型是",["$","code","1",{"children":["'a -> 'a"]}],"，其中",["$","code","2",{"children":["'a"]}],"就是一个类型变量，它可以与",["$","strong","3",{"children":["任意"]}],"类型相匹配，所以得到"]}],["$","$L5","12",{"className":"ocaml","children":["id 1\nid \"ssdfs\"\nid 1.23"]}],["$","p",null,{"children":["都是合法的表达式。ML"," ","类语言的类型系统可以看作是对"," ","System"," ","F"," ","进行限制和扩展后的系统。System"," ","F"," ","可以看作对"," ","λ"," ","表达式的扩展，在"," ","System"," ","F"," ","中，λ"," ","表达式的每个绑定变量都必须给定一个类型，而这个类型则是通过"," ",["$","span",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Λ</mi></mrow><annotation encoding=\"application/x-tex\">Λ</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">Λ</span></span></span></span>"}}],"（大写的λ）引入的。"]}],["$","p",null,{"children":["具体来说，最基本的λ表达式"," ",["$","span",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi><mi>x</mi><mi mathvariant=\"normal\">.</mi><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">λx.x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">x</span></span></span></span>"}}]," ","在"," ","System"," ","F"," ","中应该写作："]}],["$","div",null,{"children":[["$","div",null,{"className":"overflow-auto","children":["$","div",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"$7"}}]}]]}],["$","p",null,{"children":["而这个表达式的类型是"]}],["$","div",null,{"children":[["$","div",null,{"className":"overflow-auto","children":["$","div",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi mathvariant=\"normal\">∀</mi><mi>t</mi><mi mathvariant=\"normal\">.</mi><mi>t</mi><mo>→</mo><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">\n∀t.t → t\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\">∀</span><span class=\"mord mathnormal\">t</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord mathnormal\">t</span></span></span></span></span>"}}]}]]}],["$","p",null,{"children":["这个大"," ",["$","span",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Λ</mi></mrow><annotation encoding=\"application/x-tex\">Λ</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">Λ</span></span></span></span>"}}]," ","引入的类型变量在使用时需要得到显式"," ","apply（就像对小"," ",["$","span",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">λ</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>"}}]," ","的"," ","apply"," ","一样）。在"," ","System"," ","F"," ","中，类似于"," ","λ"," ","表达式，没有除了"," ",["$","span",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">λ</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>"}}],"、",["$","span",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Λ</mi></mrow><annotation encoding=\"application/x-tex\">Λ</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">Λ</span></span></span></span>"}}]," ","和"," ",["$","span",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∀</mi></mrow><annotation encoding=\"application/x-tex\">∀</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\">∀</span></span></span></span>"}}]," ","以外的东西，如果给它暂时加入整数类型（例如",["$","span",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>:</mo><mtext>Int</mtext></mrow><annotation encoding=\"application/x-tex\">1: \\text{Int}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord text\"><span class=\"mord\">Int</span></span></span></span></span>"}}],"），那么就可以给出这样的求值实例:"]}],["$","div",null,{"children":[["$","div",null,{"className":"overflow-auto","children":["$","div",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"$8"}}]}]]}],["$","p",null,{"children":["由于Hindey-Milner类型推理算法的存在，ML类语言中无须手动给出这样的"," ",["$","span",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>Int</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{Int}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord text\"><span class=\"mord\">Int</span></span></span></span></span>"}}],"，函数的类型也会自动推导为带有全称量词的形式。虽然为了进行推理，某些在"," ","System"," ","F"," ","中合法的式子不能在"," ","ML"," ","中被构造，但搞清楚"," ","System"," ","F"," ","的类型规则对接下来的讨论是大有裨益的。"]}],["$","p",null,{"children":["System"," ","F的类型规则分为四个规则："]}],["$","ol","22",{"children":[["$","li","0",{"children":[["$","div",null,{"children":[["$","div",null,{"className":"overflow-auto","children":["$","div",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"$9"}}]}]]}]]}],["$","li","1",{"children":[["$","div",null,{"children":[["$","div",null,{"className":"overflow-auto","children":["$","div",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"$a"}}]}]]}]]}],["$","li","2",{"children":[["$","div",null,{"children":[["$","div",null,{"className":"overflow-auto","children":["$","div",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"$b"}}]}]]}]]}],["$","li","3",{"children":[["$","div",null,{"children":[["$","div",null,{"className":"overflow-auto","children":["$","div",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"$c"}}]}]]}]]}]]}],["$","p",null,{"children":["从规则2.中可以看到，这里的"," ",["$","span",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>"}}]," ","是",["$","strong","1",{"children":["任意"]}],"的类型，引入这个"," ",["$","span",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Λ</mi></mrow><annotation encoding=\"application/x-tex\">Λ</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">Λ</span></span></span></span>"}}]," ","的条件是无论"," ",["$","span",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>"}}]," ","到底是什么类型，它都可以推出"," ",["$","span",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span>"}}]," ","是"," ",["$","span",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>t</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">t₁</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>"}}]," ","类型。这样一来，在规则4.中，",["$","span",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span>"}}]," ","也是一个",["$","strong","7",{"children":["任意"]}],"的类型。可以不加证明地得到："]}],["$","blockquote","24",{"children":[["$","p",null,{"children":[["$","strong","0",{"children":["命题1."]}]," ","如果"," ",["$","span",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">Λ</mi><mi>A</mi><mi mathvariant=\"normal\">.</mi><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(ΛA.x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">Λ</span><span class=\"mord mathnormal\">A</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span>"}}]," ","是一个系统F中的封闭项，那么对于任意的类型"," ",["$","span",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord mathnormal\">t</span></span></span></span>"}}],"，",["$","span",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">Λ</mi><mi>A</mi><mi mathvariant=\"normal\">.</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mtext> </mtext><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">((ΛA.x)\\ t)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">((</span><span class=\"mord\">Λ</span><span class=\"mord mathnormal\">A</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\"> </span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span>"}}]," ","是一个系统F中的封闭项。"]}]]}],["$","p",null,{"children":["命题1.是任何声称自己实现了参数多态的系统所必须满足的命题。在ML类语言中，它表现为，一个类型为",["$","code","0",{"children":["'a -> b"]}],"（这里的",["$","code","1",{"children":["b"]}],"没有加引号，表示任何可能的类型，比如",["$","code","2",{"children":["'a"]}],"，这样一来就是",["$","code","3",{"children":["'a -> 'a"]}],"）的函数",["$","code","4",{"children":["f"]}],"，对于任何类型为",["$","code","5",{"children":["t"]}],"的合法ML表达式",["$","code","6",{"children":["x"]}],"，",["$","code","7",{"children":["f x"]}],"的类型都是",["$","code","8",{"children":["[t/'a]b"]}],"."]}],["$","p",null,{"children":["例如之前的",["$","code","0",{"children":["id"]}],"函数，",["$","code","1",{"children":["id 10"]}],"的类型就是",["$","code","2",{"children":["[int/'a]'a"]}],"，即",["$","code","3",{"children":["int"]}],"."]}],["$","p",null,{"children":["事实上，参数多态满足更强的条件–parametricity，鉴于比较复杂，这里暂不解释其含义。"]}],["$","h2",null,{"className":"text-3xl","id":"c模板满足命题1.吗","children":[["$","$L4",null,{"href":"#c模板满足命题1.吗","color":"secondary","className":"pr-3 no-underline hover:underline text-primary font-sans","children":"#"}],["C++模板满足命题1.吗？"]]}],["$","p",null,{"children":["答案是很显然的：",["$","strong","0",{"children":["不满足"]}],"。这也就是为什么C++模板不是参数多态的一个原因。"]}],["$","p",null,{"children":["例如说，",["$","code","0",{"children":["id"]}],"函数可以写成："]}],["$","$L5","31",{"className":"cpp","children":["template <class T>\nT id(T x) {\n    return 10;\n}"]}],["$","p",null,{"children":["如果之前没有写过，你可能会惊讶地发现，这竟然是",["$","strong","0",{"children":["不会报错"]}],"的！事实上，无论怎么写，它都不会报错："]}],["$","$L5","33",{"className":"cpp","children":["template <class T>\nint id(T x) {\n    return x;\n}"]}],["$","p",null,{"children":["它真正报错的位置，是在对",["$","code","0",{"children":["id"]}],"函数进行使用的时候："]}],["$","$L5","35",{"className":"cpp","children":["auto x = id(\"sdfsdf\");\n\n------------------------\n.\\test.cpp:5:10: error: cannot initialize return object of type 'const char *'\n      with an rvalue of type 'int'\n  return 10;\n         ^~\n.\\test.cpp:9:14: note: in instantiation of function template specialization       \n      'id<const char *>' requested here\n    auto y = id(\"s\");\n             ^\n1 error generated."]}],["$","p",null,{"children":["这诉说了一个无情的真相：C++"," ","编译器不会对模板函数进行类型检查，只会在",["$","strong","0",{"children":["特化"]}],"的时候进行类型检查。而这使得命题1.无法成立，因为我们根本没有保证在",["$","code","1",{"children":["T"]}],"是一个类型，",["$","code","2",{"children":["x"]}],"是",["$","code","3",{"children":["T"]}],"类型的情况下，可以推出",["$","code","4",{"children":["id"]}],"函数体（也就是",["$","code","5",{"children":["return x"]}],"）的类型是",["$","code","6",{"children":["T"]}],"."]}],["$","p",null,{"children":["相反，ocaml"," ","会无视泛型参数："]}],["$","$L5","38",{"className":"ocaml","children":["# let id (x: 'a) : int = x ;;\nval id : int -> int = <fun>"]}],["$","$L5","39",{"className":"ocaml","children":["# let id (x: 'a) : 'a = 10 ;;\nval id : int -> int = <fun>"]}],["$","p",null,{"children":["Haskell"," ","会报错："]}],["$","$L5","41",{"className":"haskell","children":["Prelude> :{\nPrelude| id :: a -> a\nPrelude| id x = 10\nPrelude| :}\n\n<interactive>:6:8: error:\n    • No instance for (Num a) arising from the literal ‘10’\n      Possible fix:\n        add (Num a) to the context of\n          the type signature for:\n            id :: forall a. a -> a\n    • In the expression: 10\n      In an equation for ‘id’: id x = 10"]}],["$","$L5","42",{"className":"haskell","children":["Prelude> :{\nPrelude| id :: a -> Int\nPrelude| id x = x\nPrelude| :}\n\n<interactive>:12:8: error:\n    • Couldn't match expected type ‘Int’ with actual type ‘a’\n      ‘a’ is a rigid type variable bound by\n        the type signature for:\n          id :: forall a. a -> Int\n        at <interactive>:11:1-14\n    • In the expression: x\n      In an equation for ‘id’: id x = x\n    • Relevant bindings include\n        x :: a (bound at <interactive>:12:4)\n        id :: a -> Int (bound at <interactive>:12:1)"]}],["$","p",null,{"children":["可见，C++"," ","并不是参数多态，它的模板系统和"," ","ML"," ","类语言中的泛型系统完全不在一个层次上。"]}],["$","h2",null,{"className":"text-3xl","id":"类型类影响问题吗","children":[["$","$L4",null,{"href":"#类型类影响问题吗","color":"secondary","className":"pr-3 no-underline hover:underline text-primary font-sans","children":"#"}],["类型类影响问题吗？"]]}],["$","p",null,{"children":["有人可能会说了，Haskell"," ","的类型类不是也会出现“在使用的时候才报错”这一现象吗？比如说"]}],["$","$L5","46",{"className":"haskell","children":["max :: Ord p => p -> p -> p\nmax x y = if y > x then y else x\n\ndata X = I | J\n\nmax I J -- 这里报错\n-- error:\n--    • No instance for (Ord X) arising from a use of ‘max’\n--    • In the expression: max I J\n--      In an equation for ‘it’: it = max I J"]}],["$","p",null,{"children":["这个错误简单来说，就是自定义类型",["$","code","0",{"children":["X"]}],"没有实现",["$","code","1",{"children":["Ord"]}],"类型类，而",["$","code","2",{"children":["max"]}],"的",["$","strong","3",{"children":["类型签名"]}],"中需要类型类",["$","code","4",{"children":["Ord"]}],"，所以报错。这和"," ","C++"," ","模板仍然很不一样。根本性的区别是，在对",["$","code","5",{"children":["max I J"]}],"进行类型检查的时候，只需要",["$","code","6",{"children":["max :: Ord p => p -> p -> p"]}],"这一个信息就够了，不需要知道",["$","code","7",{"children":["max"]}],"的函数体是什么，更不需要“特化”这个函数，这仍是在类型系统中的推导。"]}],["$","h2",null,{"className":"text-3xl","id":"真假泛型性能更好","children":[["$","$L4",null,{"href":"#真假泛型性能更好","color":"secondary","className":"pr-3 no-underline hover:underline text-primary font-sans","children":"#"}],["真假泛型？性能更好？"]]}],["$","p",null,{"children":["虽然我并不是很喜欢"," ","Java"," ","语言，但是"," ","Java"," ","语言的泛型系统（在一般情况下）满足命题1.，它是真正的参数多态。这是因为"," ","Java"," ","泛型的前身–Generic"," ","Java（GJ）是由"," ","Philip"," ","Wadler"," ","等真正的编程语言专家设计的。"]}],["$","figure","50",{"children":[["$","div",null,{"children":[["$","img","0",{"src":"https://homepages.inf.ed.ac.uk/wadler/gj/gj-front-full.jpg"}]]}]]}],["$","p",null,{"children":["有人说"," ","Java"," ","泛型采用了类型擦除，是“假泛型”，这显然是被c++模板的设计影响了。事实上显然参数多态对应的参数类型更有资格把自己叫做“泛型”。c++才是“假泛型”的例子。"]}],["$","p",null,{"children":["c++模板的设计使得"," ","module"," ","系统变成了一个困难的问题，到了"," ","2021"," ","年，99.9%"," ","的c++程序仍然在使用上古时代的头文件–这一彻头彻尾的垃圾–模拟"," ","module"," ","系统。"]}],["$","p",null,{"children":["至于性能，所谓的“特化”在编程语言中有两个更强的概念可以替代。"]}],["$","ul","54",{"children":[["$","li","0",{"children":["部分求值(partial"," ","evaluation)"]}],["$","li","1",{"children":["内联(inlining)"]}]]}],["$","p",null,{"children":["特化可以看作是一个部分求值的例子。F#"," ","则可以通过字节码反编译回"," ","C#，在",["$","a","0",{"href":"https://sharplab.io","children":["sharplab"]}],"中，可以发现"]}],["$","$L5","56",{"className":"fsharp","children":["let select x y = x\n\nlet select2 (x:int) (y:int) = select x y"]}],["$","p",null,{"children":["这样的例子会得到："]}],["$","$L5","58",{"className":"csharp","children":["using System.Reflection;\nusing Microsoft.FSharp.Core;\n\n[assembly: FSharpInterfaceDataVersion(2, 0, 0)]\n[assembly: AssemblyVersion(\"0.0.0.0\")]\n[CompilationMapping(SourceConstructFlags.Module)]\npublic static class @_\n{\n    [CompilationArgumentCounts(new int[] {\n        1,\n        1\n    })]\n    public static a select<a, b>(a x, b y)\n    {\n        return x;\n    }\n\n    [CompilationArgumentCounts(new int[] {\n        1,\n        1\n    })]\n    public static int select2(int x, int y)\n    {\n        return x;\n    }\n}\nnamespace <StartupCode$_>\n{\n    internal static class $_\n    {\n    }\n}"]}],["$","p",null,{"children":[["$","code","0",{"children":["select2"]}],"难道不是对",["$","code","1",{"children":["select"]}],"的“特化”吗？由此看来，C++"," ","模板的“性能更好”也是很难说清楚的问题。"]}],["$","h2",null,{"className":"text-3xl","id":"concept-能解决问题吗","children":[["$","$L4",null,{"href":"#concept-能解决问题吗","color":"secondary","className":"pr-3 no-underline hover:underline text-primary font-sans","children":"#"}],["Concept:"," ","能解决问题吗？"]]}],["$","p",null,{"children":["是否是参数多态，似乎只是一个学术问题。不是参数多态，主要导致的是使用一个参数化类型（parametric"," ","type，也就是含有∀的类型）时的潜在错误，pararmetricity"," ","不成立，某些定理（比如",["$","code","0",{"children":["map f . map g = map (f . g)"]}],"）也不成立。"]}],["$","p",null,{"children":["之前已经提到了，Haskell"," ","也有会出错的问题。其他"," ","ML"," ","家族的语言，如果不算上类似"," ","F#"," ","的"," ","object"," ","系统的扩展，则基本没有出错的问题，但是需要传递更多参数或显式使用模块（module）系统。F#"," ","的"," ",["$","code","0",{"children":["List.sortWith"]}]," ","的类型就是"," ",["$","code","1",{"children":["(('a -> 'a -> int) -> 'a list -> 'a list)"]}],"，对于任何"," ",["$","code","2",{"children":["'a"]}]," ","都不会出错，但是需要显式地传递一个"," ","comparer."]}],["$","p",null,{"children":["所以，不是参数多态，也许也不是特别大的问题。"]}],["$","p",null,{"children":["但说到"," ","C++，不是参数多态确实带来了一个相当严重的问题，那就是模板系统给出的报错信息常常令人无从下手。"]}],["$","p",null,{"children":["例如这样的程序："]}],["$","$L5","66",{"className":"cpp","children":["#include <iostream>\n#include <vector>\n#include <algorithm>\n\nclass A {};\n\nint main() {\n    std::vector<A> v;\n    std::sort(v.begin(), v.end());\n}"]}],["$","p",null,{"children":["会产生"," ","200"," ","行，19kb"," ","的报错："]}],["$","$L5","68",{"className":"text","children":["In file included from .\\test.cpp:3:\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Tools\\MSVC\\14.28.29910\\include\\algorithm:7361:32: error: no matching function for call to object of type 'std::less<>'\n            if (_DEBUG_LT_PRED(_Pred, _Val, *_First)) { // found new earliest element, move to front\n..."]}],["$","p",null,{"children":["为了解决这个问题，C++20"," ","引入了"," ","concept，concept"," ","借鉴了类型类和"," ","Java"," ","泛型的设计，可以使得我们能写出类似于之前"," ","Haskell"," ","的",["$","code","0",{"children":["max"]}],"那样的程序："]}],["$","$L5","70",{"className":"cpp","children":["#include <iostream>\n#include <algorithm>\n#include <concepts>\n\ntemplate <class T> requires std::equality_comparable<T>\nbool max(T x, T y) {\n    if (x > y) {\n        return x;\n    } else {\n        return y;\n    }\n}"]}],["$","p",null,{"children":["如果这时写出："]}],["$","$L5","72",{"className":"cpp","children":["class A{};\n\nint main() {\n    max(A(), A());\n}"]}],["$","p",null,{"children":["编译器会报错："]}],["$","$L5","74",{"className":"text","children":["$d"]}],["$","p",null,{"children":["这里会直接表明A不满足",["$","code","0",{"children":["std::equality_comparable"]}],"的约束。虽然如此，噪音还是非常的多。更重要的是，对于库函数–这种我们不想研究源码的函数，效果还是一般："]}],["$","$L5","76",{"className":"text","children":["$e"]}],["$","p",null,{"children":["公允地说，C++"," ","的模板设计也带来了一些好处。虽然从理论上来说，编译器有一些通用的方法能够得到“特化”所带来的性能提升，但实践上的各种困难",["$","sup","0",{"children":[["$","a","0",{"href":"#note-1","id":"note-anchor-1","children":["1"]}]]}],"使得"," ","C++"," ","模板在性能上确实有一些优势（这里指的是运行时性能，在编译性能上，C++"," ","模板是极其糟糕的）。"]}],["$","p",null,{"children":["相比语言设计本身，我更不喜欢的是某些"," ","C++"," ","程序员的无知，以及这种无知带来的傲慢态度。某些人动辄把"," ","Java"," ","的泛型叫做“假泛型”，认为只有像"," ","C++"," ","模板一样的泛型实现才是“真泛型”。我真诚地建议，这些人应该认真阅读一下本文。"]}],["$","div",null,{"className":"notes","children":[["$","$Lf",null,{"itemId":"1","id":"note-1","children":[["$","p",null,{"children":["知乎上有一篇",["$","a","0",{"href":"https://zhuanlan.zhihu.com/p/456388736","children":["特别好的文章"]}],"介绍了"," ","Haskell"," ","等语言在这个问题上的尴尬"]}]]}]]}]]}]]}]]}]],null],null]},[["$","div",null,{"className":" relative w-full py-12 shadow-xl shadow-slate-700/20 ring-1 ring-gray-900/5 dark:shadow-slate-100/20 dark:ring-gray-100/5 lg:mx-auto lg:max-w-4xl lg:pt-16 lg:pb-28","children":["$","div",null,{"className":"prose prose-natural dark:prose-invert mx-auto max-w-full px-8 sm:px-16 relative","children":["$","$L10",null,{"parallelRouterKey":"children","segmentPath":["children","$11","children","posts","children","$12","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L13",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/d0ab39c2387d2115.css","precedence":"next","crossOrigin":"$undefined"}]]}]}]}],null],null]},["$","$L10",null,{"parallelRouterKey":"children","segmentPath":["children","$11","children","posts","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L13",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"zh-cn","suppressHydrationWarning":true,"children":["$","body",null,{"className":"text-foreground bg-background min-h-screen","children":["$","$L14",null,{"children":["$L15",["$","$L10",null,{"parallelRouterKey":"children","segmentPath":["children","$11","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L13",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]}]}]}],null],null]},[["$","$L10",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L13",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/1853fef16522224d.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/ad2762ca96cee671.css","precedence":"next","crossOrigin":"$undefined"}]]}],null],null],[null,"$L16"]]]]
17:I[53693,["706","static/chunks/706-97ed238ee5a03fb5.js","469","static/chunks/469-7ee2e4c850f58403.js","911","static/chunks/911-e9f556f9b03e931c.js","373","static/chunks/373-fbdb9516436dc720.js","203","static/chunks/app/%5Blocale%5D/layout-a565b40c48425316.js"],"Navbar"]
18:I[53693,["706","static/chunks/706-97ed238ee5a03fb5.js","469","static/chunks/469-7ee2e4c850f58403.js","911","static/chunks/911-e9f556f9b03e931c.js","373","static/chunks/373-fbdb9516436dc720.js","203","static/chunks/app/%5Blocale%5D/layout-a565b40c48425316.js"],"NavbarBrand"]
1a:I[53693,["706","static/chunks/706-97ed238ee5a03fb5.js","469","static/chunks/469-7ee2e4c850f58403.js","911","static/chunks/911-e9f556f9b03e931c.js","373","static/chunks/373-fbdb9516436dc720.js","203","static/chunks/app/%5Blocale%5D/layout-a565b40c48425316.js"],"NavbarItem"]
1d:I[53693,["706","static/chunks/706-97ed238ee5a03fb5.js","469","static/chunks/469-7ee2e4c850f58403.js","911","static/chunks/911-e9f556f9b03e931c.js","373","static/chunks/373-fbdb9516436dc720.js","203","static/chunks/app/%5Blocale%5D/layout-a565b40c48425316.js"],"NavbarContent"]
1e:I[81946,["706","static/chunks/706-97ed238ee5a03fb5.js","469","static/chunks/469-7ee2e4c850f58403.js","911","static/chunks/911-e9f556f9b03e931c.js","373","static/chunks/373-fbdb9516436dc720.js","203","static/chunks/app/%5Blocale%5D/layout-a565b40c48425316.js"],"default"]
1f:I[48125,["706","static/chunks/706-97ed238ee5a03fb5.js","469","static/chunks/469-7ee2e4c850f58403.js","911","static/chunks/911-e9f556f9b03e931c.js","373","static/chunks/373-fbdb9516436dc720.js","203","static/chunks/app/%5Blocale%5D/layout-a565b40c48425316.js"],"default"]
15:["$","$L17",null,{"shouldHideOnScroll":true,"children":[["$","$L18",null,{"className":"flex flex-row gap-4","children":[["$","p",null,{"className":"font-bold text-inherit","children":"$L19"}],["$","$L1a",null,{"children":"$L1b"}],["$","$L1a",null,{"children":"$L1c"}]]}],["$","$L1d",null,{"justify":"end","className":"gap-1","children":[["$","$L1a",null,{"children":["$","$L1e",null,{}]}],["$","$L1a",null,{"children":["$","$L1f",null,{}]}]]}]]}]
16:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Aya's Blog"}],["$","meta","3",{"name":"description","content":"A site powered by next.js and pandoc"}],["$","link","4",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"48x48"}]]
1:null
20:I[9678,["706","static/chunks/706-97ed238ee5a03fb5.js","469","static/chunks/469-7ee2e4c850f58403.js","911","static/chunks/911-e9f556f9b03e931c.js","373","static/chunks/373-fbdb9516436dc720.js","203","static/chunks/app/%5Blocale%5D/layout-a565b40c48425316.js"],"default"]
19:["$","$L20",null,{"locale":"zh-cn","localePrefix":"always","href":"/","aria-label":"主页","children":"主页"}]
1b:["$","$L20",null,{"locale":"zh-cn","localePrefix":"always","href":"/blog/","className":"font-bold","aria-label":"博客","children":"博客"}]
1c:["$","$L20",null,{"locale":"zh-cn","localePrefix":"always","href":"/favorites/","className":"font-bold","aria-label":"园地","children":"园地"}]
