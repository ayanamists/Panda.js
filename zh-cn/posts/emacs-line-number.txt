2:"$Sreact.fragment"
3:I[65469,["945","static/chunks/945-45c92e2d248fab37.js","786","static/chunks/786-c6fa5cb99b8c7140.js","807","static/chunks/807-c8470476b2b24d30.js","827","static/chunks/app/%5Blocale%5D/posts/%5Bslug%5D/page-cadedd2465269073.js"],""]
4:I[39926,["945","static/chunks/945-45c92e2d248fab37.js","786","static/chunks/786-c6fa5cb99b8c7140.js","807","static/chunks/807-c8470476b2b24d30.js","827","static/chunks/app/%5Blocale%5D/posts/%5Bslug%5D/page-cadedd2465269073.js"],"default"]
6:I[27377,["945","static/chunks/945-45c92e2d248fab37.js","786","static/chunks/786-c6fa5cb99b8c7140.js","807","static/chunks/807-c8470476b2b24d30.js","827","static/chunks/app/%5Blocale%5D/posts/%5Bslug%5D/page-cadedd2465269073.js"],"default"]
7:I[78703,[],""]
a:I[53751,[],""]
b:I[59576,["945","static/chunks/945-45c92e2d248fab37.js","327","static/chunks/327-1450e5f44eb18d82.js","786","static/chunks/786-c6fa5cb99b8c7140.js","256","static/chunks/256-7bc8f523a9d252a9.js","203","static/chunks/app/%5Blocale%5D/layout-54c8e01b9c8af01a.js"],"Providers"]
5:T899,(defun spacemacs//linum-enabled-for-current-major-mode ()
  "Return non-nil if line number is enabled for current major-mode."
  (let* ((disabled-for-modes
          (spacemacs/mplist-get-values dotspacemacs-line-numbers
                                       :disabled-for-modes))
         (user-enabled-for-modes
          (spacemacs/mplist-get-values dotspacemacs-line-numbers
                                       :enabled-for-modes))
         ;; default `enabled-for-modes' to '(prog-mode text-mode), because it is
         ;; a more sensible default than enabling in all buffers - including
         ;; Magit buffers, terminal buffers, etc. But don't include prog-mode or
         ;; text-mode if they're explicitly disabled by user
         (enabled-for-modes (or user-enabled-for-modes
                                (seq-difference '(prog-mode text-mode)
                                                disabled-for-modes
                                                #'eq)))
         (enabled-for-parent (or (and (equal enabled-for-modes '(all)) 'all)
                                 (apply #'derived-mode-p enabled-for-modes)))
         (disabled-for-parent (apply #'derived-mode-p disabled-for-modes)))
    (or
     ;; special case 'all: enable for any mode that isn't specifically disabled
     (and (eq enabled-for-parent 'all) (not disabled-for-parent))
     ;; current mode or a parent is in :enabled-for-modes, and there isn't a
     ;; more specific parent (or the mode itself) in :disabled-for-modes
     (and enabled-for-parent
          (or (not disabled-for-parent)
              ;; handles the case where current major-mode has a parent both in
              ;; :enabled-for-modes and in :disabled-for-modes. Return non-nil
              ;; if enabled-for-parent is the more specific parent (IOW derives
              ;; from disabled-for-parent)
              (spacemacs/derived-mode-p enabled-for-parent disabled-for-parent)))
     ;; current mode (or parent) not explicitly disabled
     (and (null user-enabled-for-modes)
          enabled-for-parent            ; mode is one of default allowed modes
          disabled-for-modes
          (not disabled-for-parent)))))8:["locale","zh-cn","d"]
9:["slug","emacs-line-number","d"]
0:["AITwHaO_tLtX-9oJARxYX",[[["",{"children":[["locale","zh-cn","d"],{"children":["posts",{"children":[["slug","emacs-line-number","d"],{"children":["__PAGE__?{\"locale\":\"zh-cn\",\"slug\":\"emacs-line-number\"}",{}]}]}]}]},"$undefined","$undefined",true],["",{"children":[["locale","zh-cn","d"],{"children":["posts",{"children":[["slug","emacs-line-number","d"],{"children":["__PAGE__",{},[["$L1",["$","main",null,{"children":[["$","h1",null,{"className":"text-4xl font-bold mb-2","children":"在 coq-mode 下开启行号显示"}],["$","div",null,{"className":"text-sm text-gray-500 mb-5","children":"12/4/2023"}],["$","$2","0",{"children":[["$","p",null,{"children":["行号（Line"," ","Number）的显示，似乎不应该成为一个问题。vscode"," ","仓库里还有一个"," ",["$","a","0",{"href":"https://github.com/Microsoft/vscode/issues/52735","children":["issue"]}]," ","在询问怎么方便地关闭行号显示。而对于"," ","Vim"," ","用户来说，一句"," ",["$","code","1",{"children":["set :number"]}]," ","就可以开启行号显示。"]}],["$","p",null,{"children":["没错，Emacs"," ","就是这么特别的编辑器。对我这样偶尔用一用的用户来说，行号显示也确实是一个困扰我的问题。"]}],["$","h2",null,{"className":"text-3xl","id":"问题是什么","children":[["$","$L3",null,{"href":"#问题是什么","color":"secondary","className":"pr-3 no-underline hover:underline","children":"#"}],["问题是什么"]]}],["$","p",null,{"children":["我使用的是一个"," ","Emacs"," ","的发行版，或者说一个比较成熟的配置文件，",["$","a","0",{"href":"https://www.spacemacs.org/","children":["Spacemacs"]}],"."," ","在"," ","Spacemacs"," ","的官方文档里，要开启行号显示，似乎只需要在"," ",["$","code","1",{"children":[".spacemacs"]}]," ","里设置一下变量就可以了："]}],["$","$L4","4",{"className":"elisp","children":["(setq-default dotspacemacs-line-numbers t)"]}],["$","p",null,{"children":["这句话的意思就是，把"," ",["$","code","0",{"children":["dotspacemacs-line-numbers"]}]," ","设置为"," ",["$","code","1",{"children":["t"]}],"."]}],["$","p",null,{"children":["同时，为了支持"," ","coq"," ","语言，我还装载了"," ",["$","code","0",{"children":["coq"]}]," ","层（layer）."," ","但如果打开一个"," ","coq"," ","文件，你也许会惊奇地发现，这时"," ","coq"," ","源代码是没有行号的："]}],["$","figure","7",{"children":[["$","div",null,{"children":[["$","img","0",{"src":"https://pic.superbed.cc/item/656efcb312f8d922c1008d4a.png"}]]}]]}],["$","p",null,{"children":["按照正常的直觉，设置为"," ",["$","code","0",{"children":["t"]}]," ","应该是会在所有情况下显示行号的。那么，为什么没有显示行号呢？"]}],["$","h2",null,{"className":"text-3xl","id":"临时解决方案","children":[["$","$L3",null,{"href":"#临时解决方案","color":"secondary","className":"pr-3 no-underline hover:underline","children":"#"}],["临时解决方案"]]}],["$","p",null,{"children":["解决这个问题，其实比搞清楚原因要容易。"]}],["$","p",null,{"children":["稍加搜索，我发现"," ",["$","code","0",{"children":["spc t n"]}]," ",["$","sup","1",{"children":[["$","a","0",{"href":"#note-1","id":"note-anchor-1","children":["1"]}]]}],"可以在当前"," ","buffer"," ","打开行号，这确实可以解决问题。按照"," ","Emacs"," ","wiki"," ","的说法，这个快捷键调用的实际上是"," ","Emacs"," ","26.1"," ","版本后引入的行号命令"," ",["$","code","2",{"children":["display-line-numbers-mode"]}],"."]}],["$","p",null,{"children":["Emacs"," ","的命令可以通过"," ",["$","code","0",{"children":["m-x"]}],"，或者"," ",["$","code","1",{"children":["spc spc"]}]," ","执行。实际上，一个命令就是一个"," ","Emacs"," ","Lisp"," ","的函数，参考"," ","Programming"," ","Elisp"," ","的",["$","a","2",{"href":"https://www.gnu.org/software/emacs/manual/html_node/eintr/Interactive-multiply_002dby_002dseven.html","children":["文档"]}],"，只要一个函数的函数定义里有"," ",["$","code","3",{"children":["(interactive)"]}],"，那么它就可以当成一个命令调用。"]}],["$","p",null,{"children":["显然，Spacemacs"," ","也是通过这个函数进行行号相关设置。虽然不知道因为什么原因，Spacemacs"," ","没有给我的"," ",["$","code","0",{"children":[".v"]}]," ","文件开启行号，但是我们可以自己开启。"]}],["$","p",null,{"children":[["$","code","0",{"children":["coq"]}]," ","层实际上使用了"," ",["$","code","1",{"children":["coq-mode"]}],"."," ",["$","code","2",{"children":["coq-mode"]}]," ","是一个"," ","Emacs"," ","的",["$","a","3",{"href":"https://www.gnu.org/software/emacs/manual/html_node/emacs/Major-Modes.html","children":["主模式（Major"," ","Mode）"]}],"，它给"," ","coq"," ","语言提供了支持，并定义了一大堆快捷键。"]}],["$","p",null,{"children":["Emacs"," ","支持一种叫做"," ",["$","a","0",{"href":"https://www.gnu.org/software/emacs/manual/html_node/emacs/Hooks.html","children":["Hooks"]}]," ","的机制，它允许我们在某个模式加载时，执行一系列操作。既然"," ","Spacemacs"," ","不会给"," ",["$","code","1",{"children":["coq-mode"]}]," ","开启行号，我们就通过这种机制手动执行"," ",["$","code","2",{"children":["display-line-numbers-mode"]}],"."]}],["$","$L4","16",{"className":"elisp","children":["(defun dotspacemacs/user-config ()\n  \"Configuration for user code:\nThis function is called at the very end of Spacemacs startup, after layer\nconfiguration.\nPut your configuration code here, except for variables that should be set\nbefore packages are loaded.\"\n  (add-hook 'coq-mode-hook (lambda () (display-line-numbers-mode 1)))\n)"]}],["$","p",null,{"children":["这里的"," ",["$","code","0",{"children":["dotspacemacs/user-config"]}]," ","是"," ","Spacemacs"," ","配置文件的一部分，在这里可以执行一些自定义操作。"]}],["$","p",null,{"children":["这当然就解决了问题。其实，Spacemacs"," ","在文档里还提到了一个选项"," ",["$","code","0",{"children":[":enabled-for-modes"]}],"."," ","在这个选项里加上"," ",["$","code","1",{"children":["coq-mode"]}]," ","可以直接解决问题。不过我直到搞清楚了问题的来源，才发现了有这个选项。"]}],["$","$L4","19",{"className":"elisp","children":["(setq-default dotspacemacs-line-numbers\n  '(:enabled-for-modes coq-mode))"]}],["$","h2",null,{"className":"text-3xl","id":"为什么","children":[["$","$L3",null,{"href":"#为什么","color":"secondary","className":"pr-3 no-underline hover:underline","children":"#"}],["为什么"]]}],["$","p",null,{"children":["我首先注意到的是"," ",["$","code","0",{"children":["dotspacemacs-line-numbers"]}]," ","的注释："]}],["$","$L4","22",{"className":"elisp","children":[";; Control line numbers activation.\n;; If set to `t', `relative' or `visual' then line numbers are enabled in all\n;; `prog-mode' and `text-mode' derivatives. If set to `relative', line\n;; numbers are relative. If set to `visual', line numbers are also relative,\n;; but only visual lines are counted. For example, folded lines will not be\n;; counted and wrapped lines are counted as multiple lines.\n;; This variable can also be set to a property list for finer control:\n;; (default nil)"]}],["$","p",null,{"children":["这段注释里提到，如果把这个变量设置为"," ",["$","code","0",{"children":["t"]}],"，那么它会默认在"," ",["$","code","1",{"children":["prog-mode"]}]," ","和"," ",["$","code","2",{"children":["text-mode"]}]," ","里开启行号。这两个"," ","mode"," ","被称为"," ",["$","a","3",{"href":"https://www.gnu.org/software/emacs/manual/html_node/elisp/Basic-Major-Modes.html","children":["Basic"," ","Major"," ","Mode"]}],"."," ","一个很自然的猜想是,"," ",["$","code","4",{"children":["coq-mode"]}]," ","不是它们之一。"]}],["$","p",null,{"children":["打开一个"," ","coq"," ","文件，执行"," ",["$","code","0",{"children":["m-x describe-mode"]}],"，会看到："]}],["$","$L4","25",{"children":["Coq mode defined in ‘coq-mode.el’:\nMajor mode for Coq scripts."]}],["$","p",null,{"children":["进入"," ",["$","code","0",{"children":["coq-mode.el"]}]," ","的源代码查看一下，玄机就在第"," ","182"," ","行："]}],["$","$L4","27",{"className":"elisp","children":["(defun coq--parent-mode ()\n  (if coq-use-pg (proof-mode) (prog-mode)))\n\n;;;###autoload\n(define-derived-mode coq-mode coq--parent-mode \"Coq\"\n  \"Major mode for Coq scripts."]}],["$","p",null,{"children":["这个"," ",["$","code","0",{"children":["coq--parent-mode"]}]," ","显然就是"," ",["$","code","1",{"children":["coq-mode"]}]," ","的父模式（parent"," ","mode），Emasc"," ","的模式也有一个继承树，一个模式继承另一个父模式，这棵树的根不确定，有几种情况："]}],["$","ul","29",{"children":[["$","li","0",{"children":["自己"]}],["$","li","1",{"children":["Fundamental"," ","Mode"]}],["$","li","2",{"children":["Basic"," ","Major"," ","Mode"]}]]}],["$","p",null,{"children":[["$","code","0",{"children":["coq-use-pg"]}]," ","的值在我的环境里为"," ",["$","code","1",{"children":["t"]}],"，它的父模式是"," ",["$","code","2",{"children":["proof-mode"]}],"."," ",["$","code","3",{"children":["proof-mode"]}]," ","的父模式又是什么呢？"]}],["$","p",null,{"children":["StackOverflow"," ","的",["$","a","0",{"href":"https://emacs.stackexchange.com/questions/58073/how-to-find-inheritance-of-modes","children":["一个问题"]}],"提供了相关代码："]}],["$","$L4","32",{"className":"elisp","children":["(defun derived-modes (mode)\n  \"Return a list of the ancestor modes that MODE is derived from.\"\n  (let ((modes   ())\n        (parent  nil))\n    (while (setq parent (get mode 'derived-mode-parent))\n      (push parent modes)\n      (setq mode parent))\n    (setq modes  (nreverse modes))))"]}],["$","p",null,{"children":["用这个函数，确实可以得到一些“正常”模式的继承路径，比如我们刚刚说的"," ",["$","code","0",{"children":["proof-mode"]}],":"]}],["$","$L4","34",{"className":"elisp","children":["ELISP> (derived-modes 'proof-mode)\n(prog-mode)"]}],["$","p",null,{"children":["是的，",["$","code","0",{"children":["proof-mode"]}]," ","的父模式就是"," ",["$","code","1",{"children":["prog-mode"]}],"."," ","如果你还记得刚才的文档的话，",["$","code","2",{"children":["prog-mode"]}]," ","在"," ",["$","code","3",{"children":["dotspacemacs-line-numbers"]}]," ","设置为"," ",["$","code","4",{"children":["t"]}]," ","的时候也应该显示行号。"]}],["$","p",null,{"children":["那么，究竟是什么地方错了呢？不妨给这个函数输入"," ",["$","code","0",{"children":["'coq-mode"]}],":"]}],["$","$L4","37",{"className":"elisp","children":["ELISP> (derived-modes 'coq-mode)\n(coq--parent-mode)"]}],["$","p",null,{"children":["它的输出是"," ",["$","code","0",{"children":["(coq--parent-mode)"]}],"，这只是父模式的符号，而不是求值后的父模式。可见，",["$","code","1",{"children":["(get 'coq-mode 'derived-parent-mode)"]}]," ","这个表达式只能拿到语法上的符号，而非它真正的父模式。检查"," ",["$","code","2",{"children":["define-derived-mode"]}]," ","的源代码，可以发现"," ",["$","code","3",{"children":["(get mode 'derived-mode-parent)"]}]," ","拿到的是这句话设置的父模式："]}],["$","$L4","39",{"className":"elisp","children":["(put ',child 'derived-mode-parent ',parent)"]}],["$","p",null,{"children":["那么，Spacemacs"," ","是这样得到父模式的吗？Spacemacs"," ","在"," ",["$","code","0",{"children":["spacemacs/layers/+spacemacs/spacemacs-defaults/funcs.el"]}]," ","的"," ",["$","code","1",{"children":["spacemacs//linum-enabled-for-current-major-mode"]}]," ","函数中检查是否在当前模式下开启行号显示："]}],["$","$L4","41",{"className":"elisp","children":["$5"]}],["$","p",null,{"children":["可以看到，它通过"," ",["$","code","0",{"children":["derived-mode-p"]}]," ","函数询问当前"," ","buffer"," ","的"," ","major"," ","mode"," ","是不是预设的"," ",["$","code","1",{"children":["enabled-for-modes"]}]," ","的子模式。",["$","code","2",{"children":["dervied-mode-p"]}]," ","是"," ","Emacs"," ","提供的一个函数，",["$","a","3",{"href":"https://doc.endlessparentheses.com/Fun/derived-mode-p.html","children":["文档"]}],"声称，如果当前"," ","buffer"," ","的主模式是"," ",["$","code","4",{"children":["modes"]}]," ","的子模式，那么"," ",["$","code","5",{"children":["(derived-mode-p modes)"]}]," ","将返回非"," ",["$","code","6",{"children":["nil"]}]," ","值。"]}],["$","p",null,{"children":["再检查"," ",["$","code","0",{"children":["derived-mode-p"]}]," ","的源代码，我们终于发现了问题的根源。"]}],["$","$L4","44",{"className":"elisp","children":["(defun provided-mode-derived-p (mode &rest modes)\n  \"Non-nil if MODE is derived from one of MODES or their aliases.\nUses the `derived-mode-parent' property of the symbol to trace backwards.\nIf you just want to check `major-mode', use `derived-mode-p'.\"\n  (while\n      (and\n       (not (memq mode modes))\n       (let* ((parent (get mode 'derived-mode-parent))\n              (parentfn (symbol-function parent)))\n         (setq mode (if (and parentfn (symbolp parentfn)) parentfn parent)))))\n  mode)\n\n(defun derived-mode-p (&rest modes)\n  \"Non-nil if the current major mode is derived from one of MODES.\nUses the `derived-mode-parent' property of the symbol to trace backwards.\"\n  (apply #'provided-mode-derived-p major-mode modes))"]}],["$","p",null,{"children":[["$","code","0",{"children":["dervied-mode-p"]}]," ","同样通过"," ",["$","code","1",{"children":["(get mode 'derived-mode-parent)"]}]," ","来得到某个模式的父模式，而这对于"," ",["$","code","2",{"children":["coq-mode"]}]," ","来说会得到"," ",["$","code","3",{"children":["coq--parent-mode"]}],","," ","继承链在这里就断了。"]}],["$","p",null,{"children":["Emacs"," ","中的模式定义最后确实是定义了一个函数。然而，如果"," ",["$","code","0",{"children":["'parent"]}]," ","不能求值出正确的父模式，Emacs"," ","对于"," ","mode"," ","的预设函数就会得不到期望的结果。显然，",["$","code","1",{"children":["coq-mode"]}]," ","不应该这样定义"," ",["$","code","2",{"children":["coq--parent-mode"]}],"."," ","那么，到底应该怎么定义"," ",["$","code","3",{"children":["coq--parent-mode"]}]," ","呢？"]}],["$","h2",null,{"className":"text-3xl","id":"最终解决方案","children":[["$","$L3",null,{"href":"#最终解决方案","color":"secondary","className":"pr-3 no-underline hover:underline","children":"#"}],["最终解决方案"]]}],["$","p",null,{"children":["Emacs"," ","Lisp"," ","的全局变量和全局函数是不同的，这和"," ","Scheme"," ","很不一样。如果直接把"," ",["$","code","0",{"children":["coq--parent-mode"]}]," ","定义为一个变量，会使得"," ",["$","code","1",{"children":["coq-mode"]}]," ","无法加载。"]}],["$","$L4","49",{"className":"elisp","children":["(defvar coq--parent-mode\n  (if coq-use-pg 'proof-mode 'prog-mode))"]}],["$","p",null,{"children":["万幸的是，Emacs"," ","Lisp"," ","提供了一个叫做"," ",["$","code","0",{"children":["defalias"]}]," ","的函数，它可以把"," ",["$","code","1",{"children":["coq--parent-mode"]}]," ","定义为一个"," ","alias."]}],["$","$L4","51",{"className":"elisp","children":["(defalias 'coq--parent-mode\n  (if coq-use-pg 'proof-mode 'prog-mode))"]}],["$","p",null,{"children":["上面的修改就足以使得"," ","Spacemacs"," ","可以自动侦测到"," ",["$","code","0",{"children":["coq-mode"]}]," ","派生自"," ",["$","code","1",{"children":["prog-mode"]}],"，从而开启行号显示。我已经提交了一个"," ",["$","a","2",{"href":"https://github.com/ProofGeneral/PG/pull/717","children":["PR"]}],"，并合入了主分支。"]}],["$","div",null,{"className":"notes","children":[["$","$L6",null,{"itemId":"1","id":"note-1","children":[["$","p",null,{"children":["如果你不熟悉这种快捷键记法，可以参考",["$","a","0",{"href":"https://kb.iu.edu/d/aghb","children":["文档"]}]]}]]}]]}]]}]]}]],null],null]},[["$","div",null,{"className":" relative w-full px-6 py-12 shadow-xl  shadow-slate-700/20 ring-1 ring-gray-900/5 dark:shadow-slate-300/20 dark:ring-gray-100/5 dark:shadow-slate-900/10 md:max-w-3xl md:mx-auto lg:max-w-4xl lg:pt-16 lg:pb-28 prose prose-natural dark:prose-invert","children":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","$8","children","posts","children","$9","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$La",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/ecc949282143a457.css","precedence":"next","crossOrigin":"$undefined"}]]}]}],null],null]},["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","$8","children","posts","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$La",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"zh-cn","suppressHydrationWarning":true,"children":["$","body",null,{"className":"__className_aaf875 text-foreground bg-background min-h-screen","children":["$","$Lb",null,{"children":["$Lc",["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","$8","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$La",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]}]}]}],null],null]},[["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$La",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/2f71e0d51b6954c9.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/cb36c8a6d34b9690.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","2",{"rel":"stylesheet","href":"/_next/static/css/ad2762ca96cee671.css","precedence":"next","crossOrigin":"$undefined"}]]}],null],null],[null,"$Ld"]]]]
e:I[56875,["945","static/chunks/945-45c92e2d248fab37.js","327","static/chunks/327-1450e5f44eb18d82.js","786","static/chunks/786-c6fa5cb99b8c7140.js","256","static/chunks/256-7bc8f523a9d252a9.js","203","static/chunks/app/%5Blocale%5D/layout-54c8e01b9c8af01a.js"],"Navbar"]
f:I[56875,["945","static/chunks/945-45c92e2d248fab37.js","327","static/chunks/327-1450e5f44eb18d82.js","786","static/chunks/786-c6fa5cb99b8c7140.js","256","static/chunks/256-7bc8f523a9d252a9.js","203","static/chunks/app/%5Blocale%5D/layout-54c8e01b9c8af01a.js"],"NavbarBrand"]
11:I[56875,["945","static/chunks/945-45c92e2d248fab37.js","327","static/chunks/327-1450e5f44eb18d82.js","786","static/chunks/786-c6fa5cb99b8c7140.js","256","static/chunks/256-7bc8f523a9d252a9.js","203","static/chunks/app/%5Blocale%5D/layout-54c8e01b9c8af01a.js"],"NavbarItem"]
13:I[56875,["945","static/chunks/945-45c92e2d248fab37.js","327","static/chunks/327-1450e5f44eb18d82.js","786","static/chunks/786-c6fa5cb99b8c7140.js","256","static/chunks/256-7bc8f523a9d252a9.js","203","static/chunks/app/%5Blocale%5D/layout-54c8e01b9c8af01a.js"],"NavbarContent"]
14:I[81946,["945","static/chunks/945-45c92e2d248fab37.js","327","static/chunks/327-1450e5f44eb18d82.js","786","static/chunks/786-c6fa5cb99b8c7140.js","256","static/chunks/256-7bc8f523a9d252a9.js","203","static/chunks/app/%5Blocale%5D/layout-54c8e01b9c8af01a.js"],"default"]
15:I[48125,["945","static/chunks/945-45c92e2d248fab37.js","327","static/chunks/327-1450e5f44eb18d82.js","786","static/chunks/786-c6fa5cb99b8c7140.js","256","static/chunks/256-7bc8f523a9d252a9.js","203","static/chunks/app/%5Blocale%5D/layout-54c8e01b9c8af01a.js"],"default"]
c:["$","$Le",null,{"shouldHideOnScroll":true,"children":[["$","$Lf",null,{"className":"flex flex-row gap-4","children":[["$","p",null,{"className":"font-bold text-inherit","children":"$L10"}],["$","$L11",null,{"children":"$L12"}]]}],["$","$L13",null,{"justify":"end","children":[["$","$L11",null,{"children":["$","$L14",null,{}]}],["$","$L11",null,{"children":["$","$L15",null,{}]}]]}]]}]
d:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Aya's Blog"}],["$","meta","3",{"name":"description","content":"A site powered by next.js and pandoc"}],["$","link","4",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"48x48"}],["$","meta","5",{"name":"next-size-adjust"}]]
1:null
16:I[8269,["945","static/chunks/945-45c92e2d248fab37.js","327","static/chunks/327-1450e5f44eb18d82.js","786","static/chunks/786-c6fa5cb99b8c7140.js","256","static/chunks/256-7bc8f523a9d252a9.js","203","static/chunks/app/%5Blocale%5D/layout-54c8e01b9c8af01a.js"],"default"]
10:["$","$L16",null,{"locale":"zh-cn","localePrefix":"always","href":"/","children":"主页"}]
12:["$","$L16",null,{"locale":"zh-cn","localePrefix":"always","href":"/blog/","className":"font-bold","children":"博客"}]
