import { fileURLToPath } from 'url';
import { dirname, join } from 'path';
import fs from 'fs';
import { getAllPosts, Post } from './';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const posts = getAllPosts();

function toUpper1(str: string) {
  const terms = str.split('-');
  return terms.map(term => term.charAt(0).toUpperCase() + term.slice(1)).join('');
}

function changeName(post: Post) {
  const id = post.id;
  const language = post.metaData.language;
  return `_${toUpper1(id)}${toUpper1(language)}`;
}

let imports = '';
let conditions = '';

for (const post of posts) {
  const variableName = changeName(post);
  imports += `//@ts-ignore
import ${variableName} from './_posts/${post.id}.${post.metaData.language}.${post.metaData.ext}';\n`;
  conditions += `if (name === '${post.id}.${post.metaData.language}.${post.metaData.ext}') {\n  return <${variableName} />;\n}\n`;
}

const final = `throw new Error('Post not found');`;

const content = `// This file is automatically generated. Do not modify this file manually.
${imports}

interface PostProps {
  name: string,
}

export default function Post({ name }: PostProps) {
${conditions}
  ${final}
}
`;

fs.writeFileSync(join(dirname(__dirname), 'index.tsx'), content);
