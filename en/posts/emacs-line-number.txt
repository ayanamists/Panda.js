2:"$Sreact.fragment"
3:I[37006,["945","static/chunks/945-45c92e2d248fab37.js","786","static/chunks/786-c6fa5cb99b8c7140.js","807","static/chunks/807-c8470476b2b24d30.js","827","static/chunks/app/%5Blocale%5D/posts/%5Bslug%5D/page-cadedd2465269073.js"],"default"]
4:I[65469,["945","static/chunks/945-45c92e2d248fab37.js","786","static/chunks/786-c6fa5cb99b8c7140.js","807","static/chunks/807-c8470476b2b24d30.js","827","static/chunks/app/%5Blocale%5D/posts/%5Bslug%5D/page-cadedd2465269073.js"],""]
5:I[39926,["945","static/chunks/945-45c92e2d248fab37.js","786","static/chunks/786-c6fa5cb99b8c7140.js","807","static/chunks/807-c8470476b2b24d30.js","827","static/chunks/app/%5Blocale%5D/posts/%5Bslug%5D/page-cadedd2465269073.js"],"default"]
7:I[27377,["945","static/chunks/945-45c92e2d248fab37.js","786","static/chunks/786-c6fa5cb99b8c7140.js","807","static/chunks/807-c8470476b2b24d30.js","827","static/chunks/app/%5Blocale%5D/posts/%5Bslug%5D/page-cadedd2465269073.js"],"default"]
8:I[78703,[],""]
b:I[53751,[],""]
c:I[59576,["945","static/chunks/945-45c92e2d248fab37.js","327","static/chunks/327-1450e5f44eb18d82.js","786","static/chunks/786-c6fa5cb99b8c7140.js","256","static/chunks/256-7bc8f523a9d252a9.js","203","static/chunks/app/%5Blocale%5D/layout-54c8e01b9c8af01a.js"],"Providers"]
6:T899,(defun spacemacs//linum-enabled-for-current-major-mode ()
  "Return non-nil if line number is enabled for current major-mode."
  (let* ((disabled-for-modes
          (spacemacs/mplist-get-values dotspacemacs-line-numbers
                                       :disabled-for-modes))
         (user-enabled-for-modes
          (spacemacs/mplist-get-values dotspacemacs-line-numbers
                                       :enabled-for-modes))
         ;; default `enabled-for-modes' to '(prog-mode text-mode), because it is
         ;; a more sensible default than enabling in all buffers - including
         ;; Magit buffers, terminal buffers, etc. But don't include prog-mode or
         ;; text-mode if they're explicitly disabled by user
         (enabled-for-modes (or user-enabled-for-modes
                                (seq-difference '(prog-mode text-mode)
                                                disabled-for-modes
                                                #'eq)))
         (enabled-for-parent (or (and (equal enabled-for-modes '(all)) 'all)
                                 (apply #'derived-mode-p enabled-for-modes)))
         (disabled-for-parent (apply #'derived-mode-p disabled-for-modes)))
    (or
     ;; special case 'all: enable for any mode that isn't specifically disabled
     (and (eq enabled-for-parent 'all) (not disabled-for-parent))
     ;; current mode or a parent is in :enabled-for-modes, and there isn't a
     ;; more specific parent (or the mode itself) in :disabled-for-modes
     (and enabled-for-parent
          (or (not disabled-for-parent)
              ;; handles the case where current major-mode has a parent both in
              ;; :enabled-for-modes and in :disabled-for-modes. Return non-nil
              ;; if enabled-for-parent is the more specific parent (IOW derives
              ;; from disabled-for-parent)
              (spacemacs/derived-mode-p enabled-for-parent disabled-for-parent)))
     ;; current mode (or parent) not explicitly disabled
     (and (null user-enabled-for-modes)
          enabled-for-parent            ; mode is one of default allowed modes
          disabled-for-modes
          (not disabled-for-parent)))))9:["locale","en","d"]
a:["slug","emacs-line-number","d"]
0:["AITwHaO_tLtX-9oJARxYX",[[["",{"children":[["locale","en","d"],{"children":["posts",{"children":[["slug","emacs-line-number","d"],{"children":["__PAGE__?{\"locale\":\"en\",\"slug\":\"emacs-line-number\"}",{}]}]}]}]},"$undefined","$undefined",true],["",{"children":[["locale","en","d"],{"children":["posts",{"children":[["slug","emacs-line-number","d"],{"children":["__PAGE__",{},[["$L1",["$","main",null,{"children":[["$","h1",null,{"className":"text-4xl font-bold mb-2","children":"Enabling Line Number Display in coq-mode"}],["$","div",null,{"className":"text-sm text-gray-500 mb-5","children":"12/4/2023"}],["$","$2","0",{"children":[["$","$L3",null,{"type":"warning","children":[["$","p",null,{"children":["This"," ","article"," ","was"," ","translated"," ","from"," ","Chinese"," ","by"," ","ChatGPT"," ","and"," ","may"," ","contain"," ","some"," ","errors."]}]]}],["$","p",null,{"children":["The"," ","display"," ","of"," ","line"," ","numbers"," ","(Line"," ","Number)"," ","should"," ","not"," ","be"," ","a"," ","problem."," ","There"," ","is"," ","even"," ","an"," ",["$","a","0",{"href":"https://github.com/Microsoft/vscode/issues/52735","children":["issue"]}]," ","in"," ","the"," ","vscode"," ","repository"," ","asking"," ","how"," ","to"," ","conveniently"," ","turn"," ","off"," ","the"," ","line"," ","number"," ","display."," ","For"," ","Vim"," ","users,"," ","a"," ","simple"," ",["$","code","1",{"children":["set :number"]}]," ","can"," ","turn"," ","on"," ","the"," ","line"," ","number"," ","display."]}],["$","p",null,{"children":["Yes,"," ","Emacs"," ","is"," ","such"," ","a"," ","special"," ","editor."," ","For"," ","occasional"," ","users"," ","like"," ","me,"," ","the"," ","display"," ","of"," ","line"," ","numbers"," ","is"," ","indeed"," ","a"," ","problem"," ","that"," ","troubles"," ","me."]}],["$","h2",null,{"className":"text-3xl","id":"what-is-the-problem","children":[["$","$L4",null,{"href":"#what-is-the-problem","color":"secondary","className":"pr-3 no-underline hover:underline","children":"#"}],["What"," ","is"," ","the"," ","problem"]]}],["$","p",null,{"children":["I"," ","am"," ","using"," ","a"," ","distribution"," ","of"," ","Emacs,"," ","or"," ","a"," ","mature"," ","configuration"," ","file,"," ",["$","a","0",{"href":"https://www.spacemacs.org/","children":["Spacemacs"]}],"."," ","In"," ","the"," ","official"," ","Spacemacs"," ","documentation,"," ","to"," ","enable"," ","line"," ","number"," ","display,"," ","you"," ","only"," ","need"," ","to"," ","set"," ","a"," ","variable"," ","in"," ",["$","code","1",{"children":[".spacemacs"]}],":"]}],["$","$L5","5",{"className":"elisp","children":["(setq-default dotspacemacs-line-numbers t)"]}],["$","p",null,{"children":["The"," ","meaning"," ","of"," ","this"," ","sentence"," ","is"," ","to"," ","set"," ",["$","code","0",{"children":["dotspacemacs-line-numbers"]}]," ","to"," ",["$","code","1",{"children":["t"]}],"."]}],["$","p",null,{"children":["At"," ","the"," ","same"," ","time,"," ","to"," ","support"," ","the"," ","coq"," ","language,"," ","I"," ","also"," ","loaded"," ","the"," ",["$","code","0",{"children":["coq"]}]," ","layer."," ","But"," ","if"," ","you"," ","open"," ","a"," ","coq"," ","file,"," ","you"," ","may"," ","be"," ","surprised"," ","to"," ","find"," ","that"," ","the"," ","coq"," ","source"," ","code"," ","does"," ","not"," ","have"," ","line"," ","numbers:"]}],["$","figure","8",{"children":[["$","div",null,{"children":[["$","img","0",{"src":"https://pic.superbed.cc/item/656efcb312f8d922c1008d4a.png"}]]}]]}],["$","p",null,{"children":["According"," ","to"," ","normal"," ","intuition,"," ","setting"," ","to"," ",["$","code","0",{"children":["t"]}]," ","should"," ","display"," ","line"," ","numbers"," ","in"," ","all"," ","cases."," ","So,"," ","why"," ","are"," ","there"," ","no"," ","line"," ","numbers?"]}],["$","h2",null,{"className":"text-3xl","id":"temporary-solution","children":[["$","$L4",null,{"href":"#temporary-solution","color":"secondary","className":"pr-3 no-underline hover:underline","children":"#"}],["Temporary"," ","Solution"]]}],["$","p",null,{"children":["Solving"," ","this"," ","problem"," ","is"," ","actually"," ","easier"," ","than"," ","figuring"," ","out"," ","the"," ","reason."]}],["$","p",null,{"children":["After"," ","a"," ","little"," ","search,"," ","I"," ","found"," ","that"," ",["$","code","0",{"children":["spc t n"]}]," ",["$","sup","1",{"children":[["$","a","0",{"href":"#note-1","id":"note-anchor-1","children":["1"]}]]}]," ","can"," ","turn"," ","on"," ","line"," ","numbers"," ","in"," ","the"," ","current"," ","buffer,"," ","which"," ","can"," ","indeed"," ","solve"," ","the"," ","problem."," ","According"," ","to"," ","the"," ","Emacs"," ","wiki,"," ","this"," ","shortcut"," ","actually"," ","calls"," ","the"," ","line"," ","number"," ","command"," ",["$","code","2",{"children":["display-line-numbers-mode"]}]," ","introduced"," ","after"," ","Emacs"," ","26.1"," ","version."]}],["$","p",null,{"children":["Emacs"," ","commands"," ","can"," ","be"," ","executed"," ","through"," ",["$","code","0",{"children":["m-x"]}],","," ","or"," ",["$","code","1",{"children":["spc spc"]}],"."," ","In"," ","fact,"," ","a"," ","command"," ","is"," ","an"," ","Emacs"," ","Lisp"," ","function."," ","According"," ","to"," ","the"," ",["$","a","2",{"href":"https://www.gnu.org/software/emacs/manual/html_node/eintr/Interactive-multiply_002dby_002dseven.html","children":["documentation"]}]," ","of"," ","Programming"," ","Elisp,"," ","as"," ","long"," ","as"," ","there"," ","is"," ",["$","code","3",{"children":["(interactive)"]}]," ","in"," ","the"," ","function"," ","definition"," ","of"," ","a"," ","function,"," ","it"," ","can"," ","be"," ","called"," ","as"," ","a"," ","command."]}],["$","p",null,{"children":["Clearly,"," ","Spacemacs"," ","also"," ","sets"," ","line"," ","numbers"," ","through"," ","this"," ","function."," ","Although"," ","I"," ","don’t"," ","know"," ","why"," ","Spacemacs"," ","didn’t"," ","turn"," ","on"," ","line"," ","numbers"," ","for"," ","my"," ",["$","code","0",{"children":[".v"]}]," ","files,"," ","we"," ","can"," ","turn"," ","them"," ","on"," ","ourselves."]}],["$","p",null,{"children":["The"," ",["$","code","0",{"children":["coq"]}]," ","layer"," ","actually"," ","uses"," ",["$","code","1",{"children":["coq-mode"]}],"."," ",["$","code","2",{"children":["coq-mode"]}]," ","is"," ","a"," ",["$","a","3",{"href":"https://www.gnu.org/software/emacs/manual/html_node/emacs/Major-Modes.html","children":["Major"," ","Mode"]}]," ","of"," ","Emacs,"," ","which"," ","provides"," ","support"," ","for"," ","the"," ","coq"," ","language"," ","and"," ","defines"," ","a"," ","bunch"," ","of"," ","shortcuts."]}],["$","p",null,{"children":["Emacs"," ","supports"," ","a"," ","mechanism"," ","called"," ",["$","a","0",{"href":"https://www.gnu.org/software/emacs/manual/html_node/emacs/Hooks.html","children":["Hooks"]}],","," ","which"," ","allows"," ","us"," ","to"," ","perform"," ","a"," ","series"," ","of"," ","operations"," ","when"," ","a"," ","mode"," ","is"," ","loaded."," ","Since"," ","Spacemacs"," ","won’t"," ","turn"," ","on"," ","line"," ","numbers"," ","for"," ",["$","code","1",{"children":["coq-mode"]}],","," ","we"," ","manually"," ","execute"," ",["$","code","2",{"children":["display-line-numbers-mode"]}]," ","through"," ","this"," ","mechanism."]}],["$","$L5","17",{"className":"elisp","children":["(defun dotspacemacs/user-config ()\n  \"Configuration for user code:\nThis function is called at the very end of Spacemacs startup, after layer\nconfiguration.\nPut your configuration code here, except for variables that should be set\nbefore packages are loaded.\"\n  (add-hook 'coq-mode-hook (lambda () (display-line-numbers-mode 1)))\n)"]}],["$","p",null,{"children":["Here,"," ",["$","code","0",{"children":["dotspacemacs/user-config"]}]," ","is"," ","part"," ","of"," ","the"," ","Spacemacs"," ","configuration"," ","file,"," ","where"," ","you"," ","can"," ","perform"," ","some"," ","custom"," ","operations."]}],["$","p",null,{"children":["This"," ","of"," ","course"," ","solves"," ","the"," ","problem."," ","In"," ","fact,"," ","Spacemacs"," ","also"," ","mentions"," ","an"," ","option"," ",["$","code","0",{"children":[":enabled-for-modes"]}]," ","in"," ","the"," ","documentation."," ","Adding"," ",["$","code","1",{"children":["coq-mode"]}]," ","to"," ","this"," ","option"," ","can"," ","directly"," ","solve"," ","the"," ","problem."," ","However,"," ","I"," ","didn’t"," ","discover"," ","this"," ","option"," ","until"," ","I"," ","figured"," ","out"," ","the"," ","source"," ","of"," ","the"," ","problem."]}],["$","$L5","20",{"className":"elisp","children":["(setq-default dotspacemacs-line-numbers\n  '(:enabled-for-modes coq-mode))"]}],["$","h2",null,{"className":"text-3xl","id":"why","children":[["$","$L4",null,{"href":"#why","color":"secondary","className":"pr-3 no-underline hover:underline","children":"#"}],["Why"]]}],["$","p",null,{"children":["The"," ","first"," ","thing"," ","I"," ","noticed"," ","was"," ","the"," ","comment"," ","for"," ",["$","code","0",{"children":["dotspacemacs-line-numbers"]}],":"]}],["$","$L5","23",{"className":"elisp","children":[";; Control line numbers activation.\n;; If set to `t', `relative' or `visual' then line numbers are enabled in all\n;; `prog-mode' and `text-mode' derivatives. If set to `relative', line\n;; numbers are relative. If set to `visual', line numbers are also relative,\n;; but only visual lines are counted. For example, folded lines will not be\n;; counted and wrapped lines are counted as multiple lines.\n;; This variable can also be set to a property list for finer control:\n;; (default nil)"]}],["$","p",null,{"children":["This"," ","comment"," ","mentions"," ","that"," ","if"," ","this"," ","variable"," ","is"," ","set"," ","to"," ",["$","code","0",{"children":["t"]}],","," ","it"," ","will"," ","enable"," ","line"," ","numbers"," ","by"," ","default"," ","in"," ",["$","code","1",{"children":["prog-mode"]}]," ","and"," ",["$","code","2",{"children":["text-mode"]}],"."," ","These"," ","two"," ","modes"," ","are"," ","known"," ","as"," ",["$","a","3",{"href":"https://www.gnu.org/software/emacs/manual/html_node/elisp/Basic-Major-Modes.html","children":["Basic"," ","Major"," ","Modes"]}],"."," ","A"," ","natural"," ","guess"," ","is"," ","that"," ",["$","code","4",{"children":["coq-mode"]}]," ","is"," ","not"," ","one"," ","of"," ","them."]}],["$","p",null,{"children":["Open"," ","a"," ","coq"," ","file,"," ","execute"," ",["$","code","0",{"children":["m-x describe-mode"]}],","," ","and"," ","you"," ","will"," ","see:"]}],["$","$L5","26",{"children":["Coq mode defined in ‘coq-mode.el’:\nMajor mode for Coq scripts."]}],["$","p",null,{"children":["Enter"," ","the"," ","source"," ","code"," ","of"," ",["$","code","0",{"children":["coq-mode.el"]}]," ","to"," ","take"," ","a"," ","look,"," ","the"," ","mystery"," ","lies"," ","in"," ","line"," ","182:"]}],["$","$L5","28",{"className":"elisp","children":["(defun coq--parent-mode ()\n  (if coq-use-pg (proof-mode) (prog-mode)))\n\n;;;###autoload\n(define-derived-mode coq-mode coq--parent-mode \"Coq\"\n  \"Major mode for Coq scripts."]}],["$","p",null,{"children":["This"," ",["$","code","0",{"children":["coq--parent-mode"]}]," ","is"," ","obviously"," ","the"," ","parent"," ","mode"," ","of"," ",["$","code","1",{"children":["coq-mode"]}]," ","(parent"," ","mode),"," ","Emasc’s"," ","mode"," ","also"," ","has"," ","an"," ","inheritance"," ","tree,"," ","a"," ","mode"," ","inherits"," ","another"," ","parent"," ","mode,"," ","the"," ","root"," ","of"," ","this"," ","tree"," ","is"," ","uncertain,"," ","there"," ","are"," ","several"," ","situations:"]}],["$","ul","30",{"children":[["$","li","0",{"children":["Itself"]}],["$","li","1",{"children":["Fundamental"," ","Mode"]}],["$","li","2",{"children":["Basic"," ","Major"," ","Mode"]}]]}],["$","p",null,{"children":["The"," ","value"," ","of"," ",["$","code","0",{"children":["coq-use-pg"]}]," ","in"," ","my"," ","environment"," ","is"," ",["$","code","1",{"children":["t"]}],","," ","and"," ","its"," ","parent"," ","mode"," ","is"," ",["$","code","2",{"children":["proof-mode"]}],"."," ","What"," ","is"," ","the"," ","parent"," ","mode"," ","of"," ",["$","code","3",{"children":["proof-mode"]}],"?"]}],["$","p",null,{"children":["A"," ",["$","a","0",{"href":"https://emacs.stackexchange.com/questions/58073/how-to-find-inheritance-of-modes","children":["question"]}]," ","on"," ","StackOverflow"," ","provides"," ","the"," ","relevant"," ","code:"]}],["$","$L5","33",{"className":"elisp","children":["(defun derived-modes (mode)\n  \"Return a list of the ancestor modes that MODE is derived from.\"\n  (let ((modes   ())\n        (parent  nil))\n    (while (setq parent (get mode 'derived-mode-parent))\n      (push parent modes)\n      (setq mode parent))\n    (setq modes  (nreverse modes))))"]}],["$","p",null,{"children":["With"," ","this"," ","function,"," ","you"," ","can"," ","indeed"," ","get"," ","the"," ","inheritance"," ","path"," ","of"," ","some"," ",["$","q","0",{"children":["normal"]}]," ","modes,"," ","such"," ","as"," ","the"," ",["$","code","1",{"children":["proof-mode"]}]," ","we"," ","just"," ","mentioned:"]}],["$","$L5","35",{"className":"elisp","children":["ELISP> (derived-modes 'proof-mode)\n(prog-mode)"]}],["$","p",null,{"children":["Yes,"," ","the"," ","parent"," ","mode"," ","of"," ",["$","code","0",{"children":["proof-mode"]}]," ","is"," ",["$","code","1",{"children":["prog-mode"]}],"."," ","If"," ","you"," ","still"," ","remember"," ","the"," ","document"," ","just"," ","now,"," ",["$","code","2",{"children":["prog-mode"]}]," ","should"," ","also"," ","display"," ","line"," ","numbers"," ","when"," ",["$","code","3",{"children":["dotspacemacs-line-numbers"]}]," ","is"," ","set"," ","to"," ",["$","code","4",{"children":["t"]}],"."]}],["$","p",null,{"children":["So,"," ","what"," ","went"," ","wrong?"," ","Let’s"," ","input"," ",["$","code","0",{"children":["'coq-mode"]}]," ","into"," ","this"," ","function:"]}],["$","$L5","38",{"className":"elisp","children":["ELISP> (derived-modes 'coq-mode)\n(coq--parent-mode)"]}],["$","p",null,{"children":["Its"," ","output"," ","is"," ",["$","code","0",{"children":["(coq--parent-mode)"]}],","," ","which"," ","is"," ","just"," ","the"," ","symbol"," ","of"," ","the"," ","parent"," ","mode,"," ","not"," ","the"," ","evaluated"," ","parent"," ","mode."," ","It"," ","can"," ","be"," ","seen"," ","that"," ","the"," ","expression"," ",["$","code","1",{"children":["(get 'coq-mode 'derived-parent-mode)"]}]," ","can"," ","only"," ","get"," ","the"," ","symbol"," ","in"," ","syntax,"," ","not"," ","its"," ","real"," ","parent"," ","mode."," ","Checking"," ","the"," ","source"," ","code"," ","of"," ",["$","code","2",{"children":["define-derived-mode"]}],","," ","you"," ","can"," ","find"," ","that"," ","what"," ",["$","code","3",{"children":["(get mode 'derived-mode-parent)"]}]," ","gets"," ","is"," ","the"," ","parent"," ","mode"," ","set"," ","by"," ","this"," ","sentence:"]}],["$","$L5","40",{"className":"elisp","children":["(put ',child 'derived-mode-parent ',parent)"]}],["$","p",null,{"children":["So,"," ","is"," ","this"," ","how"," ","Spacemacs"," ","gets"," ","the"," ","parent"," ","mode?"," ","Spacemacs"," ","checks"," ","whether"," ","line"," ","number"," ","display"," ","is"," ","enabled"," ","in"," ","the"," ","current"," ","mode"," ","in"," ","the"," ",["$","code","0",{"children":["spacemacs//linum-enabled-for-current-major-mode"]}]," ","function"," ","in"," ",["$","code","1",{"children":["spacemacs/layers/+spacemacs/spacemacs-defaults/funcs.el"]}],":"]}],["$","$L5","42",{"className":"elisp","children":["$6"]}],["$","p",null,{"children":["As"," ","you"," ","can"," ","see,"," ","it"," ","asks"," ","the"," ","current"," ","buffer’s"," ","major"," ","mode"," ","if"," ","it"," ","is"," ","a"," ","child"," ","mode"," ","of"," ","the"," ","preset"," ",["$","code","0",{"children":["enabled-for-modes"]}]," ","through"," ","the"," ",["$","code","1",{"children":["derived-mode-p"]}]," ","function."," ",["$","code","2",{"children":["dervied-mode-p"]}]," ","is"," ","a"," ","function"," ","provided"," ","by"," ","Emacs,"," ","and"," ","the"," ",["$","a","3",{"href":"https://doc.endlessparentheses.com/Fun/derived-mode-p.html","children":["documentation"]}]," ","claims"," ","that"," ","if"," ","the"," ","current"," ","buffer’s"," ","main"," ","mode"," ","is"," ","a"," ","child"," ","mode"," ","of"," ",["$","code","4",{"children":["modes"]}],","," ","then"," ",["$","code","5",{"children":["(derived-mode-p modes)"]}]," ","will"," ","return"," ","a"," ","non-",["$","code","6",{"children":["nil"]}]," ","value."]}],["$","p",null,{"children":["Upon"," ","further"," ","inspection"," ","of"," ","the"," ","source"," ","code"," ","of"," ",["$","code","0",{"children":["derived-mode-p"]}],","," ","we"," ","finally"," ","found"," ","the"," ","root"," ","of"," ","the"," ","problem."]}],["$","$L5","45",{"className":"elisp","children":["(defun provided-mode-derived-p (mode &rest modes)\n  \"Non-nil if MODE is derived from one of MODES or their aliases.\nUses the `derived-mode-parent' property of the symbol to trace backwards.\nIf you just want to check `major-mode', use `derived-mode-p'.\"\n  (while\n      (and\n       (not (memq mode modes))\n       (let* ((parent (get mode 'derived-mode-parent))\n              (parentfn (symbol-function parent)))\n         (setq mode (if (and parentfn (symbolp parentfn)) parentfn parent)))))\n  mode)\n\n(defun derived-mode-p (&rest modes)\n  \"Non-nil if the current major mode is derived from one of MODES.\nUses the `derived-mode-parent' property of the symbol to trace backwards.\"\n  (apply #'provided-mode-derived-p major-mode modes))"]}],["$","p",null,{"children":[["$","code","0",{"children":["dervied-mode-p"]}]," ","also"," ","gets"," ","the"," ","parent"," ","mode"," ","of"," ","a"," ","certain"," ","mode"," ","through"," ",["$","code","1",{"children":["(get mode 'derived-mode-parent)"]}],","," ","but"," ","for"," ",["$","code","2",{"children":["coq-mode"]}],","," ","it"," ","will"," ","get"," ",["$","code","3",{"children":["coq--parent-mode"]}],","," ","and"," ","the"," ","inheritance"," ","chain"," ","breaks"," ","here."]}],["$","p",null,{"children":["The"," ","final"," ","definition"," ","of"," ","mode"," ","in"," ","Emacs"," ","is"," ","indeed"," ","a"," ","function."," ","However,"," ","if"," ",["$","code","0",{"children":["'parent"]}]," ","cannot"," ","evaluate"," ","the"," ","correct"," ","parent"," ","mode,"," ","Emacs’"," ","preset"," ","function"," ","for"," ","mode"," ","will"," ","not"," ","get"," ","the"," ","expected"," ","result."," ","Obviously,"," ",["$","code","1",{"children":["coq-mode"]}]," ","should"," ","not"," ","define"," ",["$","code","2",{"children":["coq--parent-mode"]}]," ","in"," ","this"," ","way."," ","So,"," ","how"," ","should"," ",["$","code","3",{"children":["coq--parent-mode"]}]," ","be"," ","defined?"]}],["$","h2",null,{"className":"text-3xl","id":"final-solution","children":[["$","$L4",null,{"href":"#final-solution","color":"secondary","className":"pr-3 no-underline hover:underline","children":"#"}],["Final"," ","Solution"]]}],["$","p",null,{"children":["The"," ","global"," ","variables"," ","and"," ","global"," ","functions"," ","of"," ","Emacs"," ","Lisp"," ","are"," ","different,"," ","which"," ","is"," ","very"," ","different"," ","from"," ","Scheme."," ","If"," ","you"," ","directly"," ","define"," ",["$","code","0",{"children":["coq--parent-mode"]}]," ","as"," ","a"," ","variable,"," ","it"," ","will"," ","make"," ",["$","code","1",{"children":["coq-mode"]}]," ","unable"," ","to"," ","load."]}],["$","$L5","50",{"className":"elisp","children":["(defvar coq--parent-mode\n  (if coq-use-pg 'proof-mode 'prog-mode))"]}],["$","p",null,{"children":["Fortunately,"," ","Emacs"," ","Lisp"," ","provides"," ","a"," ","function"," ","called"," ",["$","code","0",{"children":["defalias"]}],","," ","which"," ","can"," ","define"," ",["$","code","1",{"children":["coq--parent-mode"]}]," ","as"," ","an"," ","alias."]}],["$","$L5","52",{"className":"elisp","children":["(defalias 'coq--parent-mode\n  (if coq-use-pg 'proof-mode 'prog-mode))"]}],["$","p",null,{"children":["The"," ","above"," ","modification"," ","is"," ","enough"," ","to"," ","make"," ","Spacemacs"," ","automatically"," ","detect"," ","that"," ",["$","code","0",{"children":["coq-mode"]}]," ","is"," ","derived"," ","from"," ",["$","code","1",{"children":["prog-mode"]}],","," ","thus"," ","turning"," ","on"," ","line"," ","number"," ","display."," ","I"," ","have"," ","submitted"," ","a"," ",["$","a","2",{"href":"https://github.com/ProofGeneral/PG/pull/717","children":["PR"]}]," ","and"," ","merged"," ","it"," ","into"," ","the"," ","main"," ","branch."]}],["$","div",null,{"className":"notes","children":[["$","$L7",null,{"itemId":"1","id":"note-1","children":[["$","p",null,{"children":["If"," ","you"," ","are"," ","not"," ","familiar"," ","with"," ","this"," ","shortcut"," ","notation,"," ","you"," ","can"," ","refer"," ","to"," ","the"," ",["$","a","0",{"href":"https://kb.iu.edu/d/aghb","children":["documentation"]}]]}]]}]]}]]}]]}]],null],null]},[["$","div",null,{"className":" relative w-full px-6 py-12 shadow-xl  shadow-slate-700/20 ring-1 ring-gray-900/5 dark:shadow-slate-300/20 dark:ring-gray-100/5 dark:shadow-slate-900/10 md:max-w-3xl md:mx-auto lg:max-w-4xl lg:pt-16 lg:pb-28 prose prose-natural dark:prose-invert","children":["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children","$9","children","posts","children","$a","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Lb",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/ecc949282143a457.css","precedence":"next","crossOrigin":"$undefined"}]]}]}],null],null]},["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children","$9","children","posts","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Lb",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"en","suppressHydrationWarning":true,"children":["$","body",null,{"className":"__className_aaf875 text-foreground bg-background min-h-screen","children":["$","$Lc",null,{"children":["$Ld",["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children","$9","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Lb",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]}]}]}],null],null]},[["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Lb",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/2f71e0d51b6954c9.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/cb36c8a6d34b9690.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","2",{"rel":"stylesheet","href":"/_next/static/css/ad2762ca96cee671.css","precedence":"next","crossOrigin":"$undefined"}]]}],null],null],[null,"$Le"]]]]
f:I[56875,["945","static/chunks/945-45c92e2d248fab37.js","327","static/chunks/327-1450e5f44eb18d82.js","786","static/chunks/786-c6fa5cb99b8c7140.js","256","static/chunks/256-7bc8f523a9d252a9.js","203","static/chunks/app/%5Blocale%5D/layout-54c8e01b9c8af01a.js"],"Navbar"]
10:I[56875,["945","static/chunks/945-45c92e2d248fab37.js","327","static/chunks/327-1450e5f44eb18d82.js","786","static/chunks/786-c6fa5cb99b8c7140.js","256","static/chunks/256-7bc8f523a9d252a9.js","203","static/chunks/app/%5Blocale%5D/layout-54c8e01b9c8af01a.js"],"NavbarBrand"]
12:I[56875,["945","static/chunks/945-45c92e2d248fab37.js","327","static/chunks/327-1450e5f44eb18d82.js","786","static/chunks/786-c6fa5cb99b8c7140.js","256","static/chunks/256-7bc8f523a9d252a9.js","203","static/chunks/app/%5Blocale%5D/layout-54c8e01b9c8af01a.js"],"NavbarItem"]
14:I[56875,["945","static/chunks/945-45c92e2d248fab37.js","327","static/chunks/327-1450e5f44eb18d82.js","786","static/chunks/786-c6fa5cb99b8c7140.js","256","static/chunks/256-7bc8f523a9d252a9.js","203","static/chunks/app/%5Blocale%5D/layout-54c8e01b9c8af01a.js"],"NavbarContent"]
15:I[81946,["945","static/chunks/945-45c92e2d248fab37.js","327","static/chunks/327-1450e5f44eb18d82.js","786","static/chunks/786-c6fa5cb99b8c7140.js","256","static/chunks/256-7bc8f523a9d252a9.js","203","static/chunks/app/%5Blocale%5D/layout-54c8e01b9c8af01a.js"],"default"]
16:I[48125,["945","static/chunks/945-45c92e2d248fab37.js","327","static/chunks/327-1450e5f44eb18d82.js","786","static/chunks/786-c6fa5cb99b8c7140.js","256","static/chunks/256-7bc8f523a9d252a9.js","203","static/chunks/app/%5Blocale%5D/layout-54c8e01b9c8af01a.js"],"default"]
d:["$","$Lf",null,{"shouldHideOnScroll":true,"children":[["$","$L10",null,{"className":"flex flex-row gap-4","children":[["$","p",null,{"className":"font-bold text-inherit","children":"$L11"}],["$","$L12",null,{"children":"$L13"}]]}],["$","$L14",null,{"justify":"end","children":[["$","$L12",null,{"children":["$","$L15",null,{}]}],["$","$L12",null,{"children":["$","$L16",null,{}]}]]}]]}]
e:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Aya's Blog"}],["$","meta","3",{"name":"description","content":"A site powered by next.js and pandoc"}],["$","link","4",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"48x48"}],["$","meta","5",{"name":"next-size-adjust"}]]
1:null
17:I[8269,["945","static/chunks/945-45c92e2d248fab37.js","327","static/chunks/327-1450e5f44eb18d82.js","786","static/chunks/786-c6fa5cb99b8c7140.js","256","static/chunks/256-7bc8f523a9d252a9.js","203","static/chunks/app/%5Blocale%5D/layout-54c8e01b9c8af01a.js"],"default"]
11:["$","$L17",null,{"locale":"en","localePrefix":"always","href":"/","children":"Home"}]
13:["$","$L17",null,{"locale":"en","localePrefix":"always","href":"/blog/","className":"font-bold","children":"Blog"}]
