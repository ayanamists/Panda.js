2:"$Sreact.fragment"
3:I[37006,["645","static/chunks/61af6f7f-9cff01d0fc100f98.js","469","static/chunks/469-7ee2e4c850f58403.js","306","static/chunks/306-ef157ce75cbf9e7a.js","827","static/chunks/app/%5Blocale%5D/posts/%5Bslug%5D/page-326308bd995c4991.js"],"default"]
4:I[65469,["645","static/chunks/61af6f7f-9cff01d0fc100f98.js","469","static/chunks/469-7ee2e4c850f58403.js","306","static/chunks/306-ef157ce75cbf9e7a.js","827","static/chunks/app/%5Blocale%5D/posts/%5Bslug%5D/page-326308bd995c4991.js"],""]
5:I[39926,["645","static/chunks/61af6f7f-9cff01d0fc100f98.js","469","static/chunks/469-7ee2e4c850f58403.js","306","static/chunks/306-ef157ce75cbf9e7a.js","827","static/chunks/app/%5Blocale%5D/posts/%5Bslug%5D/page-326308bd995c4991.js"],"default"]
f:I[27377,["645","static/chunks/61af6f7f-9cff01d0fc100f98.js","469","static/chunks/469-7ee2e4c850f58403.js","306","static/chunks/306-ef157ce75cbf9e7a.js","827","static/chunks/app/%5Blocale%5D/posts/%5Bslug%5D/page-326308bd995c4991.js"],"default"]
10:I[78703,[],""]
13:I[53751,[],""]
14:I[59576,["706","static/chunks/706-97ed238ee5a03fb5.js","469","static/chunks/469-7ee2e4c850f58403.js","911","static/chunks/911-e9f556f9b03e931c.js","373","static/chunks/373-fbdb9516436dc720.js","203","static/chunks/app/%5Blocale%5D/layout-a565b40c48425316.js"],"Providers"]
6:T6d6,<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><mi>α</mi><mo>→</mo><mi>β</mi><mo separator="true">,</mo><mi>α</mi><mtext> list</mtext><mo stretchy="false">)</mo><mo>→</mo><mi>β</mi><mtext> list</mtext></mrow><annotation encoding="application/x-tex">
(α → β , α\ \text{list}) → β \ \text{list}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace"> </span><span class="mord text"><span class="mord">list</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mspace"> </span><span class="mord text"><span class="mord">list</span></span></span></span></span></span>7:T4b1,<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">Λ</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>λ</mi><mo stretchy="false">(</mo><mi>x</mi><mo>:</mo><mi>t</mi><mo stretchy="false">)</mo><mi mathvariant="normal">.</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">
Λt.λ (x:t).x
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Λ</span><span class="mord mathnormal">t</span><span class="mord">.</span><span class="mord mathnormal">λ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mord">.</span><span class="mord mathnormal">x</span></span></span></span></span>8:T107e,<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi mathvariant="normal">Λ</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>λ</mi><mo stretchy="false">(</mo><mi>x</mi><mo>:</mo><mi>t</mi><mo stretchy="false">)</mo><mi mathvariant="normal">.</mi><mi>x</mi><mo stretchy="false">)</mo><mtext>Int</mtext><mo stretchy="false">)</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>⇒</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo stretchy="false">(</mo><mi>λ</mi><mo stretchy="false">(</mo><mi>x</mi><mo>:</mo><mtext>Int</mtext><mo stretchy="false">)</mo><mi mathvariant="normal">.</mi><mi>x</mi><mo stretchy="false">)</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>⇒</mo><mn>1</mn></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">
\begin{aligned}
((Λ t. λ (x:t). x) \text{Int})1 &amp; \Rightarrow \\\\
(λ (x:\text{Int}). x) 1 &amp; \Rightarrow 1
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.5em;vertical-align:-2em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">((</span><span class="mord">Λ</span><span class="mord mathnormal">t</span><span class="mord">.</span><span class="mord mathnormal">λ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mord">.</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord text"><span class="mord">Int</span></span><span class="mclose">)</span><span class="mord">1</span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal">λ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord text"><span class="mord">Int</span></span><span class="mclose">)</span><span class="mord">.</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span></span></span></span></span></span></span>9:T1a45,<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mfrac><mrow><mi mathvariant="normal">Γ</mi><mo separator="true">,</mo><mo stretchy="false">(</mo><mi>x</mi><mo>:</mo><msub><mi>t</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>⊢</mo><mi>y</mi><mo>:</mo><msub><mi>t</mi><mn>2</mn></msub></mrow><mrow><mi mathvariant="normal">Γ</mi><mo>⊢</mo><mo stretchy="false">(</mo><mi>λ</mi><mo stretchy="false">(</mo><mi>x</mi><mo>:</mo><msub><mi>t</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mi mathvariant="normal">.</mi><mi>y</mi><mo stretchy="false">)</mo><mo>:</mo><msub><mi>t</mi><mn>1</mn></msub><mo>→</mo><msub><mi>t</mi><mn>2</mn></msub></mrow></mfrac><mrow></mrow></msub></mrow><annotation encoding="application/x-tex">
  {\frac{Γ , (x:t_1) ⊢ y:t_2}{Γ ⊢ (λ(x:t_1).y):t_1 → t_2}}_{}
  </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.4127em;vertical-align:-0.9857em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Γ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊢</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord mathnormal">λ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Γ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊢</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.9857em;"><span style="top:-1.0143em;margin-right:0.05em;"><span class="pstrut" style="height:2em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9857em;"><span></span></span></span></span></span></span></span></span></span></span>a:T107e,<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">Γ</mi><mo separator="true">,</mo><mi>A</mi><mo>:</mo><mrow><mi mathvariant="bold">t</mi><mi mathvariant="bold">y</mi><mi mathvariant="bold">p</mi><mi mathvariant="bold">e</mi></mrow><mo>⊢</mo><mi>x</mi><mo>:</mo><msub><mi>t</mi><mn>1</mn></msub></mrow><mrow><mi mathvariant="normal">Γ</mi><mo>⊢</mo><mo stretchy="false">(</mo><mi mathvariant="normal">Λ</mi><mi>A</mi><mi mathvariant="normal">.</mi><mi>x</mi><mo stretchy="false">)</mo><mo>:</mo><mi mathvariant="normal">∀</mi><mi>A</mi><mi mathvariant="normal">.</mi><msub><mi>t</mi><mn>1</mn></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">
  \frac{Γ , A:\bold{type} ⊢ x:t_1 }{ Γ ⊢ (Λ A.x): ∀ A. t_1}
  </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.3074em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Γ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊢</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord">Λ</span><span class="mord mathnormal">A</span><span class="mord">.</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">∀</span><span class="mord mathnormal">A</span><span class="mord">.</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Γ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathbf">type</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊢</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span>b:T1491,<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">Γ</mi><mo>⊢</mo><mi>x</mi><mo>:</mo><mo stretchy="false">(</mo><msub><mi>t</mi><mn>1</mn></msub><mo>→</mo><msub><mi>t</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>y</mi><mo>:</mo><msub><mi>t</mi><mn>1</mn></msub></mrow><mrow><mi mathvariant="normal">Γ</mi><mo>⊢</mo><mo stretchy="false">(</mo><mi>x</mi><mtext> </mtext><mi>y</mi><mo stretchy="false">)</mo><mo>:</mo><msub><mi>t</mi><mn>2</mn></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">
  \frac{Γ ⊢ x:(t_1 → t_2), y:t_1}{Γ ⊢ (x\ y): t_2}
  </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Γ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊢</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Γ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊢</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span>c:T12a1,<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">Γ</mi><mo>⊢</mo><mi>x</mi><mo>:</mo><mo stretchy="false">(</mo><mi mathvariant="normal">∀</mi><mi>A</mi><mi mathvariant="normal">.</mi><msub><mi>t</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mtext>    </mtext><mo stretchy="false">(</mo><mi>B</mi><mo>:</mo><mrow><mi mathvariant="bold">t</mi><mi mathvariant="bold">y</mi><mi mathvariant="bold">p</mi><mi mathvariant="bold">e</mi></mrow><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">Γ</mi><mo>⊢</mo><mo stretchy="false">(</mo><mi>x</mi><mtext> </mtext><mi>B</mi><mo stretchy="false">)</mo><mo>:</mo><mo stretchy="false">[</mo><mi>B</mi><mi mathvariant="normal">/</mi><mi>A</mi><mo stretchy="false">]</mo><msub><mi>t</mi><mn>1</mn></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">
  \frac{Γ ⊢ x:(∀A.t_1)\  \ \ \ (B:\bold{type})}{ Γ ⊢ (x\ B):[B/A]t_1}
  </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Γ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊢</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">/</span><span class="mord mathnormal">A</span><span class="mclose">]</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Γ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊢</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord">∀</span><span class="mord mathnormal">A</span><span class="mord">.</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathbf">type</span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span>d:Taa8,source>: In function 'int main()':
<source>:17:8: error: no matching function for call to 'max(A, A)'
   17 |     max(A(), A());
      |     ~~~^~~~~~~~~~
<source>:6:6: note: candidate: 'template<class T>  requires  equality_comparable<T> bool max(T, T)'
    6 | bool max(T x, T y) {
      |      ^~~
<source>:6:6: note:   template argument deduction/substitution failed:
<source>:6:6: note: constraints not satisfied
In file included from /opt/compiler-explorer/gcc-11.2.0/include/C++/11.2.0/compare:39,
                 from /opt/compiler-explorer/gcc-11.2.0/include/C++/11.2.0/bits/stl_pair.h:65,
                 from /opt/compiler-explorer/gcc-11.2.0/include/C++/11.2.0/bits/stl_algobase.h:64,
                 from /opt/compiler-explorer/gcc-11.2.0/include/C++/11.2.0/bits/char_traits.h:39,
                 from /opt/compiler-explorer/gcc-11.2.0/include/C++/11.2.0/ios:40,
                 from /opt/compiler-explorer/gcc-11.2.0/include/C++/11.2.0/ostream:38,
                 from /opt/compiler-explorer/gcc-11.2.0/include/C++/11.2.0/iostream:39,
                 from <source>:1:
/opt/compiler-explorer/gcc-11.2.0/include/C++/11.2.0/concepts: In substitution of 'template<class T>  requires  equality_comparable<T> bool max(T, T) [with T = A]':
<source>:17:8:   required from here
/opt/compiler-explorer/gcc-11.2.0/include/C++/11.2.0/concepts:280:15:   required for the satisfaction of '__weakly_eq_cmp_with<_Tp, _Tp>' [with _Tp = A]
/opt/compiler-explorer/gcc-11.2.0/include/C++/11.2.0/concepts:290:13:   required for the satisfaction of 'equality_comparable<T>' [with T = A]
/opt/compiler-explorer/gcc-11.2.0/include/C++/11.2.0/concepts:281:4:   in requirements with 'std::remove_reference_t<_Tp>& __t', 'std::remove_reference_t<_Up>& __u' [with _Up = A; _Tp = A]
/opt/compiler-explorer/gcc-11.2.0/include/C++/11.2.0/concepts:282:17: note: the required expression '(__t == __u)' is invalid
  282 |           { __t == __u } -> __boolean_testable;
      |             ~~~~^~~~~~
/opt/compiler-explorer/gcc-11.2.0/include/C++/11.2.0/concepts:283:17: note: the required expression '(__t != __u)' is invalid
  283 |           { __t != __u } -> __boolean_testable;
      |             ~~~~^~~~~~
/opt/compiler-explorer/gcc-11.2.0/include/C++/11.2.0/concepts:284:17: note: the required expression '(__u == __t)' is invalid
  284 |           { __u == __t } -> __boolean_testable;
      |             ~~~~^~~~~~
/opt/compiler-explorer/gcc-11.2.0/include/C++/11.2.0/concepts:285:17: note: the required expression '(__u != __t)' is invalid
  285 |           { __u != __t } -> __boolean_testable;
      |             ~~~~^~~~~~
cc1plus: note: set '-fconcepts-diagnostics-depth=' to at least 2 for more detail
Compiler returned: 1e:T8c7,n file included from /opt/compiler-explorer/gcc-11.2.0/include/c++/11.2.0/bits/stl_algobase.h:71,
                 from /opt/compiler-explorer/gcc-11.2.0/include/c++/11.2.0/bits/char_traits.h:39,
                 from /opt/compiler-explorer/gcc-11.2.0/include/c++/11.2.0/ios:40,
                 from /opt/compiler-explorer/gcc-11.2.0/include/c++/11.2.0/ostream:38,
                 from /opt/compiler-explorer/gcc-11.2.0/include/c++/11.2.0/iostream:39,
                 from <source>:1:
/opt/compiler-explorer/gcc-11.2.0/include/c++/11.2.0/bits/predefined_ops.h: In instantiation of 'constexpr bool __gnu_cxx::__ops::_Iter_less_iter::operator()(_Iterator1, _Iterator2) const [with _Iterator1 = __gnu_cxx::__normal_iterator<A*, std::vector<A> >; _Iterator2 = __gnu_cxx::__normal_iterator<A*, std::vector<A> >]':
/opt/compiler-explorer/gcc-11.2.0/include/c++/11.2.0/bits/stl_algo.h:1826:14:   required from 'constexpr void std::__insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<A*, std::vector<A> >; _Compare = __gnu_cxx::__ops::_Iter_less_iter]'
/opt/compiler-explorer/gcc-11.2.0/include/c++/11.2.0/bits/stl_algo.h:1866:25:   required from 'constexpr void std::__final_insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<A*, std::vector<A> >; _Compare = __gnu_cxx::__ops::_Iter_less_iter]'
/opt/compiler-explorer/gcc-11.2.0/include/c++/11.2.0/bits/stl_algo.h:1957:31:   required from 'constexpr void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<A*, std::vector<A> >; _Compare = __gnu_cxx::__ops::_Iter_less_iter]'
/opt/compiler-explorer/gcc-11.2.0/include/c++/11.2.0/bits/stl_algo.h:4842:18:   required from 'constexpr void std::sort(_RAIter, _RAIter) [with _RAIter = __gnu_cxx::__normal_iterator<A*, std::vector<A> >]'
<source>:10:14:   required from here
/opt/compiler-explorer/gcc-11.2.0/include/c++/11.2.0/bits/predefined_ops.h:45:23: error: no match for 'operator<' (operand types are 'A' and 'A')
   45 |       { return *__it1 < *__it2; }
      |                ~~~~~~~^~~~~~~~

剩下还有80多行11:["locale","en","d"]
12:["slug","parametric-poly","d"]
0:["V33pvllFFBg-Cj_mgVzZP",[[["",{"children":[["locale","en","d"],{"children":["posts",{"children":[["slug","parametric-poly","d"],{"children":["__PAGE__?{\"locale\":\"en\",\"slug\":\"parametric-poly\"}",{}]}]}]}]},"$undefined","$undefined",true],["",{"children":[["locale","en","d"],{"children":["posts",{"children":[["slug","parametric-poly","d"],{"children":["__PAGE__",{},[["$L1",["$","article",null,{"children":[["$","h1",null,{"className":"text-4xl font-bold mb-2","children":"The Fundamental Difference Between C++ Templates and Parametric Polymorphism"}],["$","div",null,{"className":"text-sm text-gray-500 mb-5","children":"9/14/2021"}],["$","$2","0",{"children":[["$","div",null,{"className":"toc","id":"toc","children":[["$","ul","0",{"children":[["$","li","0",{"children":[["$","a","0",{"href":"#c-templates-and-parametric-polymorphism","id":"toc-c-templates-and-parametric-polymorphism","children":["C++"," ","Templates"," ","and"," ","Parametric"," ","Polymorphism"]}]]}],["$","li","1",{"children":[["$","a","0",{"href":"#what-is-parametric-polymorphism","id":"toc-what-is-parametric-polymorphism","children":["What"," ","is"," ","Parametric"," ","Polymorphism"]}]]}],["$","li","2",{"children":[["$","a","0",{"href":"#does-c-template-satisfy-proposition-1","id":"toc-does-c-template-satisfy-proposition-1","children":["Does"," ","C++"," ","template"," ","satisfy"," ","Proposition"," ","1?"]}]]}],["$","li","3",{"children":[["$","a","0",{"href":"#does-the-type-class-affect-the-problem","id":"toc-does-the-type-class-affect-the-problem","children":["Does"," ","the"," ","type"," ","class"," ","affect"," ","the"," ","problem?"]}]]}],["$","li","4",{"children":[["$","a","0",{"href":"#true-or-false-generics-better-performance","id":"toc-true-or-false-generics-better-performance","children":["True"," ","or"," ","false"," ","generics?"," ","Better"," ","performance?"]}]]}],["$","li","5",{"children":[["$","a","0",{"href":"#concept-can-it-solve-the-problem","id":"toc-concept-can-it-solve-the-problem","children":["Concept:"," ","Can"," ","it"," ","solve"," ","the"," ","problem?"]}]]}]]}]]}],["$","$L3",null,{"type":"warning","children":[["$","p",null,{"children":["This"," ","article"," ","was"," ","translated"," ","from"," ","Chinese"," ","by"," ","ChatGPT"," ","and"," ","may"," ","contain"," ","some"," ","errors."]}]]}],["$","h2",null,{"className":"text-3xl","id":"c-templates-and-parametric-polymorphism","children":[["$","$L4",null,{"href":"#c-templates-and-parametric-polymorphism","color":"secondary","className":"pr-3 no-underline hover:underline text-primary font-sans","children":"#"}],["C++"," ","Templates"," ","and"," ","Parametric"," ","Polymorphism"]]}],["$","p",null,{"children":["Templates"," ","are"," ","a"," ","feature"," ","of"," ","the"," ","C++"," ","language,"," ","similar"," ","to:"]}],["$","$L5","4",{"className":"cpp","children":["template <class T>\nT id(T x) {\n    return x;\n}"]}],["$","p",null,{"children":["Here,"," ",["$","code","0",{"children":["T"]}]," ","can"," ","be"," ","any"," ","type."," ","Many"," ","people"," ","have"," ","noticed"," ","its"," ","similarity"," ","to"," ","parametric"," ","polymorphism,"," ","and"," ","some"," ","even"," ","directly"," ","regard"," ","the"," ","template"," ","mechanism"," ","as"," ","a"," ","kind"," ","of"," ","parametric"," ","polymorphism."," ","Such"," ","as"," ","this"," ",["$","a","1",{"href":"https://www.cs.bham.ac.uk/~hxt/2015/c-plus-plus/templates-slides.pdf","children":["ppt"]}]," ","and"," ","this"," ",["$","a","2",{"href":"https://catonmat.net/cpp-polymorphism","children":["webpage"]}],"."]}],["$","p",null,{"children":["However,"," ","in"," ","this"," ","blog"," ","post,"," ","I"," ","will"," ","explain"," ","that"," ",["$","strong","0",{"children":["regardless"," ","of"," ","whether"," ","C++"," ","templates"," ","are"," ","a"," ","good"," ","language"," ","feature,"," ","they"," ","are"," ","fundamentally"," ","different"," ","from"," ","parametric"," ","polymorphism"]}],"."]}],["$","h2",null,{"className":"text-3xl","id":"what-is-parametric-polymorphism","children":[["$","$L4",null,{"href":"#what-is-parametric-polymorphism","color":"secondary","className":"pr-3 no-underline hover:underline text-primary font-sans","children":"#"}],["What"," ","is"," ","Parametric"," ","Polymorphism"]]}],["$","p",null,{"children":["The"," ","history"," ","of"," ","parametric"," ","polymorphism"," ","can"," ","be"," ","traced"," ","back"," ","to"," ","a"," ","lecture"," ","note"," ","(",["$","a","0",{"href":"https://link.springer.com/article/10.1023%2FA%3A1010000313106","children":["Fundamental"," ","Concepts"," ","in"," ","Programming"," ","Languages"]}],")."," ","Although"," ","the"," ","lecture"," ","note"," ","mainly"," ","describes"," ","the"," ","CPL"," ","language,"," ","in"," ","fact,"," ","this"," ","section"," ","should"," ","describe"," ","the"," ","MAP"," ","function"," ","of"," ","LISP:"]}],["$","blockquote","9",{"children":[["$","p",null,{"children":["Parametric"," ","polymorphism"," ","is"," ","more"," ","regular"," ","and"," ","may"," ","be"," ","illustrated"," ","by"," ","an"," ","example."," ","Suppose"," ","f"," ","is"," ","a"," ","function"," ","whose"," ","argument"," ","is"," ","of"," ","type"," ","α"," ","and"," ","whose"," ","results"," ","is"," ","of"," ","β"," ","(so"," ","that"," ","the"," ","type"," ","of"," ","f"," ","might"," ","be"," ","written"," ","α"," ","⇒"," ","β),"," ","and"," ","that"," ","L"," ","is"," ","a"," ","list"," ","whose"," ","elements"," ","are"," ","all"," ","of"," ","type"," ","α"," ","(so"," ","that"," ","the"," ","type"," ","of"," ","L"," ","is"," ","α"," ","list)."," ","We"," ","can"," ","imagine"," ","a"," ","function,"," ","say"," ","Map,"," ","which"," ","applies"," ","f"," ","in"," ","turn"," ","to"," ","each"," ","member"," ","of"," ","L"," ","and"," ","makes"," ","a"," ","list"," ","of"," ","the"," ","results."," ","Thus"," ","Map[f,L]"," ","will"," ","produce"," ","a"," ","β"," ","list."," ","We"," ","would"," ","like"," ","Map"," ","to"," ","work"," ","on"," ","all"," ","types"," ","of"," ","list"," ","provided"," ","f"," ","was"," ","a"," ","suitable"," ","function,"," ","so"," ","that"," ","Map"," ","would"," ","have"," ","to"," ","be"," ","polymorphic."," ","However"," ","its"," ","polymorphism"," ","is"," ","of"," ","a"," ","particularly"," ","simple"," ","parametric"," ","type"," ","which"," ","could"," ","be"," ","written"]}]]}],["$","div",null,{"children":[["$","div",null,{"className":"overflow-auto","children":["$","div",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"$6"}}]}]]}],["$","p",null,{"children":["The"," ","ML"," ","language"," ","in"," ","1975"," ","implemented"," ","this"," ","kind"," ","of"," ","polymorphism"," ","at"," ","the"," ","level"," ","of"," ","the"," ","type"," ","system."," ","In"," ","ML-like"," ","languages,"," ","a"," ","function’s"," ","type"," ","can"," ","contain"," ","type"," ","variables,"," ","such"," ","as"," ","the"," ",["$","code","0",{"children":["id"]}]," ","function"," ","below:"]}],["$","$L5","12",{"className":"ocaml","children":["let id (x:'a) = x"]}],["$","p",null,{"children":["The"," ","type"," ","of"," ","the"," ",["$","code","0",{"children":["id"]}]," ","function"," ","is"," ",["$","code","1",{"children":["'a -> 'a"]}],","," ","where"," ",["$","code","2",{"children":["'a"]}]," ","is"," ","a"," ","type"," ","variable"," ","that"," ","can"," ","match"," ",["$","strong","3",{"children":["any"]}]," ","type,"," ","so"," ","we"," ","get"]}],["$","$L5","14",{"className":"ocaml","children":["id 1\nid \"ssdfs\"\nid 1.23"]}],["$","p",null,{"children":["All"," ","are"," ","legal"," ","expressions."," ","The"," ","type"," ","system"," ","of"," ","ML-like"," ","languages"," ","can"," ","be"," ","seen"," ","as"," ","a"," ","system"," ","that"," ","restricts"," ","and"," ","extends"," ","System"," ","F."," ","System"," ","F"," ","can"," ","be"," ","seen"," ","as"," ","an"," ","extension"," ","of"," ","λ"," ","expressions."," ","In"," ","System"," ","F,"," ","each"," ","bound"," ","variable"," ","of"," ","a"," ","λ"," ","expression"," ","must"," ","be"," ","given"," ","a"," ","type,"," ","and"," ","this"," ","type"," ","is"," ","introduced"," ","by"," ",["$","span",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Λ</mi></mrow><annotation encoding=\"application/x-tex\">Λ</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">Λ</span></span></span></span>"}}]," ","(uppercase"," ","λ)."]}],["$","p",null,{"children":["Specifically,"," ","the"," ","most"," ","basic"," ","λ"," ","expression"," ",["$","span",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi><mi>x</mi><mi mathvariant=\"normal\">.</mi><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">λx.x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">x</span></span></span></span>"}}]," ","in"," ","System"," ","F"," ","should"," ","be"," ","written"," ","as:"]}],["$","div",null,{"children":[["$","div",null,{"className":"overflow-auto","children":["$","div",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"$7"}}]}]]}],["$","p",null,{"children":["And"," ","the"," ","type"," ","of"," ","this"," ","expression"," ","is"]}],["$","div",null,{"children":[["$","div",null,{"className":"overflow-auto","children":["$","div",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi mathvariant=\"normal\">∀</mi><mi>t</mi><mi mathvariant=\"normal\">.</mi><mi>t</mi><mo>→</mo><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">\n∀t.t → t\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\">∀</span><span class=\"mord mathnormal\">t</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord mathnormal\">t</span></span></span></span></span>"}}]}]]}],["$","p",null,{"children":["This"," ","large"," ",["$","span",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Λ</mi></mrow><annotation encoding=\"application/x-tex\">Λ</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">Λ</span></span></span></span>"}}]," ","introduces"," ","a"," ","type"," ","variable"," ","that"," ","needs"," ","to"," ","be"," ","explicitly"," ","applied"," ","when"," ","used"," ","(just"," ","like"," ","the"," ","apply"," ","for"," ","small"," ",["$","span",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">λ</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>"}}],")."," ","In"," ","System"," ","F,"," ","similar"," ","to"," ","λ"," ","expressions,"," ","there"," ","is"," ","nothing"," ","other"," ","than"," ",["$","span",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">λ</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>"}}],","," ",["$","span",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Λ</mi></mrow><annotation encoding=\"application/x-tex\">Λ</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">Λ</span></span></span></span>"}}]," ","and"," ",["$","span",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∀</mi></mrow><annotation encoding=\"application/x-tex\">∀</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\">∀</span></span></span></span>"}}],"."," ","If"," ","you"," ","temporarily"," ","add"," ","an"," ","integer"," ","type"," ","(for"," ","example,"," ",["$","span",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>:</mo><mtext>Int</mtext></mrow><annotation encoding=\"application/x-tex\">1: \\text{Int}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord text\"><span class=\"mord\">Int</span></span></span></span></span>"}}],"),"," ","then"," ","you"," ","can"," ","give"," ","such"," ","an"," ","evaluation"," ","instance:"]}],["$","div",null,{"children":[["$","div",null,{"className":"overflow-auto","children":["$","div",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"$8"}}]}]]}],["$","p",null,{"children":["Due"," ","to"," ","the"," ","existence"," ","of"," ","the"," ","Hindley-Milner"," ","type"," ","inference"," ","algorithm,"," ","there"," ","is"," ","no"," ","need"," ","to"," ","manually"," ","give"," ","such"," ",["$","span",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>Int</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{Int}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord text\"><span class=\"mord\">Int</span></span></span></span></span>"}}]," ","in"," ","ML-like"," ","languages,"," ","and"," ","the"," ","type"," ","of"," ","the"," ","function"," ","will"," ","also"," ","be"," ","automatically"," ","inferred"," ","to"," ","the"," ","form"," ","with"," ","a"," ","universal"," ","quantifier."," ","Although"," ","in"," ","order"," ","to"," ","make"," ","inferences,"," ","some"," ","legal"," ","expressions"," ","in"," ","System"," ","F"," ","cannot"," ","be"," ","constructed"," ","in"," ","ML,"," ","but"," ","it"," ","is"," ","very"," ","beneficial"," ","to"," ","understand"," ","the"," ","type"," ","rules"," ","of"," ","System"," ","F"," ","for"," ","the"," ","following"," ","discussion."]}],["$","p",null,{"children":["The"," ","type"," ","rules"," ","of"," ","System"," ","F"," ","are"," ","divided"," ","into"," ","four"," ","rules:"]}],["$","ol","24",{"children":[["$","li","0",{"children":[["$","div",null,{"children":[["$","div",null,{"className":"overflow-auto","children":["$","div",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"$9"}}]}]]}]]}],["$","li","1",{"children":[["$","div",null,{"children":[["$","div",null,{"className":"overflow-auto","children":["$","div",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"$a"}}]}]]}]]}],["$","li","2",{"children":[["$","div",null,{"children":[["$","div",null,{"className":"overflow-auto","children":["$","div",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"$b"}}]}]]}]]}],["$","li","3",{"children":[["$","div",null,{"children":[["$","div",null,{"className":"overflow-auto","children":["$","div",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"$c"}}]}]]}]]}]]}],["$","p",null,{"children":["From"," ","Rule"," ","2,"," ","we"," ","can"," ","see"," ","that"," ",["$","span",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>"}}]," ","here"," ","is"," ","an"," ",["$","strong","1",{"children":["arbitrary"]}]," ","type,"," ","and"," ","the"," ","condition"," ","for"," ","introducing"," ","this"," ",["$","span",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Λ</mi></mrow><annotation encoding=\"application/x-tex\">Λ</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">Λ</span></span></span></span>"}}]," ","is"," ","that"," ","no"," ","matter"," ","what"," ","type"," ",["$","span",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>"}}]," ","is,"," ","it"," ","can"," ","be"," ","inferred"," ","that"," ",["$","span",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span>"}}]," ","is"," ","of"," ","type"," ",["$","span",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>t</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">t₁</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7651em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>"}}],"."," ","In"," ","this"," ","way,"," ","in"," ","Rule"," ","4,"," ",["$","span",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span>"}}]," ","is"," ","also"," ","an"," ",["$","strong","7",{"children":["arbitrary"]}]," ","type."," ","It"," ","can"," ","be"," ","obtained"," ","without"," ","proof:"]}],["$","blockquote","26",{"children":[["$","p",null,{"children":[["$","strong","0",{"children":["Proposition"," ","1."]}]," ","If"," ",["$","span",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">Λ</mi><mi>A</mi><mi mathvariant=\"normal\">.</mi><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(ΛA.x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">Λ</span><span class=\"mord mathnormal\">A</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span>"}}]," ","is"," ","a"," ","closed"," ","term"," ","in"," ","System"," ","F,"," ","then"," ","for"," ","any"," ","type"," ",["$","span",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord mathnormal\">t</span></span></span></span>"}}],","," ",["$","span",null,{"data-testid":"react-katex","dangerouslySetInnerHTML":{"__html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">Λ</mi><mi>A</mi><mi mathvariant=\"normal\">.</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mtext> </mtext><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">((ΛA.x)\\ t)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">((</span><span class=\"mord\">Λ</span><span class=\"mord mathnormal\">A</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\"> </span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span>"}}]," ","is"," ","a"," ","closed"," ","term"," ","in"," ","System"," ","F."]}]]}],["$","p",null,{"children":["Proposition"," ","1"," ","is"," ","a"," ","proposition"," ","that"," ","any"," ","system"," ","claiming"," ","to"," ","have"," ","implemented"," ","parametric"," ","polymorphism"," ","must"," ","satisfy."," ","In"," ","ML-like"," ","languages,"," ","it"," ","is"," ","manifested"," ","as,"," ","a"," ","function"," ",["$","code","0",{"children":["f"]}]," ","of"," ","type"," ",["$","code","1",{"children":["'a -> b"]}]," ","(here"," ",["$","code","2",{"children":["b"]}]," ","is"," ","not"," ","quoted,"," ","representing"," ","any"," ","possible"," ","type,"," ","such"," ","as"," ",["$","code","3",{"children":["'a"]}],","," ","so"," ","it"," ","is"," ",["$","code","4",{"children":["'a -> 'a"]}],"),"," ","for"," ","any"," ","legal"," ","ML"," ","expression"," ",["$","code","5",{"children":["x"]}]," ","of"," ","type"," ",["$","code","6",{"children":["t"]}],","," ","the"," ","type"," ","of"," ",["$","code","7",{"children":["f x"]}]," ","is"," ",["$","code","8",{"children":["[t/'a]b"]}],"."]}],["$","p",null,{"children":["For"," ","example,"," ","the"," ","previous"," ",["$","code","0",{"children":["id"]}]," ","function,"," ","the"," ","type"," ","of"," ",["$","code","1",{"children":["id 10"]}]," ","is"," ",["$","code","2",{"children":["[int/'a]'a"]}],","," ","that"," ","is,"," ",["$","code","3",{"children":["int"]}],"."]}],["$","p",null,{"children":["In"," ","fact,"," ","parametric"," ","polymorphism"," ","satisfies"," ","a"," ","stronger"," ","condition–parametricity,"," ","which"," ","is"," ","quite"," ","complicated,"," ","so"," ","its"," ","meaning"," ","is"," ","not"," ","explained"," ","here."]}],["$","h2",null,{"className":"text-3xl","id":"does-c-template-satisfy-proposition-1","children":[["$","$L4",null,{"href":"#does-c-template-satisfy-proposition-1","color":"secondary","className":"pr-3 no-underline hover:underline text-primary font-sans","children":"#"}],["Does"," ","C++"," ","template"," ","satisfy"," ","Proposition"," ","1?"]]}],["$","p",null,{"children":["The"," ","answer"," ","is"," ","obviously:"," ",["$","strong","0",{"children":["No"]}],"."," ","This"," ","is"," ","also"," ","a"," ","reason"," ","why"," ","C++"," ","templates"," ","are"," ","not"," ","parametric"," ","polymorphism."]}],["$","p",null,{"children":["For"," ","example,"," ","the"," ",["$","code","0",{"children":["id"]}]," ","function"," ","can"," ","be"," ","written"," ","as:"]}],["$","$L5","33",{"className":"cpp","children":["template <class T>\nT id(T x) {\n    return 10;\n}"]}],["$","p",null,{"children":["If"," ","you"," ","haven’t"," ","written"," ","it"," ","before,"," ","you"," ","may"," ","be"," ","surprised"," ","to"," ","find"," ","that"," ","this"," ","is"," ",["$","strong","0",{"children":["not"," ","an"," ","error"]}],"!"," ","In"," ","fact,"," ","no"," ","matter"," ","how"," ","you"," ","write"," ","it,"," ","it"," ","won’t"," ","be"," ","an"," ","error:"]}],["$","$L5","35",{"className":"cpp","children":["template <class T>\nint id(T x) {\n    return x;\n}"]}],["$","p",null,{"children":["The"," ","real"," ","error"," ","occurs"," ","when"," ","using"," ","the"," ",["$","code","0",{"children":["id"]}]," ","function:"]}],["$","$L5","37",{"className":"cpp","children":["auto x = id(\"sdfsdf\");\n\n------------------------\n.\\test.cpp:5:10: error: cannot initialize return object of type 'const char *'\n      with an rvalue of type 'int'\n  return 10;\n         ^~\n.\\test.cpp:9:14: note: in instantiation of function template specialization       \n      'id<const char *>' requested here\n    auto y = id(\"s\");\n             ^\n1 error generated."]}],["$","p",null,{"children":["This"," ","tells"," ","a"," ","ruthless"," ","truth:"," ","The"," ","C++"," ","compiler"," ","does"," ","not"," ","perform"," ","type"," ","checking"," ","on"," ","template"," ","functions,"," ","but"," ","only"," ","performs"," ","type"," ","checking"," ","when"," ",["$","strong","0",{"children":["specializing"]}],"."," ","This"," ","makes"," ","Proposition"," ","1"," ","impossible,"," ","because"," ","we"," ","have"," ","no"," ","guarantee"," ","that"," ","when"," ",["$","code","1",{"children":["T"]}]," ","is"," ","a"," ","type"," ","and"," ",["$","code","2",{"children":["x"]}]," ","is"," ","of"," ","type"," ",["$","code","3",{"children":["T"]}],","," ","the"," ","type"," ","of"," ","the"," ",["$","code","4",{"children":["id"]}]," ","function"," ","body"," ","(that"," ","is,"," ",["$","code","5",{"children":["return x"]}],")"," ","can"," ","be"," ","inferred"," ","to"," ","be"," ",["$","code","6",{"children":["T"]}],"."]}],["$","p",null,{"children":["On"," ","the"," ","contrary,"," ","ocaml"," ","will"," ","ignore"," ","generic"," ","parameters:"]}],["$","$L5","40",{"className":"ocaml","children":["# let id (x: 'a) : int = x ;;\nval id : int -> int = <fun>"]}],["$","$L5","41",{"className":"ocaml","children":["# let id (x: 'a) : 'a = 10 ;;\nval id : int -> int = <fun>"]}],["$","p",null,{"children":["Haskell"," ","will"," ","throw"," ","an"," ","error:"]}],["$","$L5","43",{"className":"haskell","children":["Prelude> :{\nPrelude| id :: a -> a\nPrelude| id x = 10\nPrelude| :}\n\n<interactive>:6:8: error:\n    • No instance for (Num a) arising from the literal ‘10’\n      Possible fix:\n        add (Num a) to the context of\n          the type signature for:\n            id :: forall a. a -> a\n    • In the expression: 10\n      In an equation for ‘id’: id x = 10"]}],["$","$L5","44",{"className":"haskell","children":["Prelude> :{\nPrelude| id :: a -> Int\nPrelude| id x = x\nPrelude| :}\n\n<interactive>:12:8: error:\n    • Couldn't match expected type ‘Int’ with actual type ‘a’\n      ‘a’ is a rigid type variable bound by\n        the type signature for:\n          id :: forall a. a -> Int\n        at <interactive>:11:1-14\n    • In the expression: x\n      In an equation for ‘id’: id x = x\n    • Relevant bindings include\n        x :: a (bound at <interactive>:12:4)\n        id :: a -> Int (bound at <interactive>:12:1)"]}],["$","p",null,{"children":["As"," ","you"," ","can"," ","see,"," ","C++"," ","is"," ","not"," ","parameter"," ","polymorphic,"," ","its"," ","template"," ","system"," ","and"," ","the"," ","generic"," ","system"," ","in"," ","ML-like"," ","languages"," ","are"," ","not"," ","on"," ","the"," ","same"," ","level."]}],["$","h2",null,{"className":"text-3xl","id":"does-the-type-class-affect-the-problem","children":[["$","$L4",null,{"href":"#does-the-type-class-affect-the-problem","color":"secondary","className":"pr-3 no-underline hover:underline text-primary font-sans","children":"#"}],["Does"," ","the"," ","type"," ","class"," ","affect"," ","the"," ","problem?"]]}],["$","p",null,{"children":["Some"," ","people"," ","might"," ","say,"," ","doesn’t"," ","Haskell’s"," ","type"," ","class"," ","also"," ","have"," ","the"," ","phenomenon"," ","of"," ",["$","q","0",{"children":["only"," ","reporting"," ","errors"," ","when"," ","used"]}],"?"," ","For"," ","example"]}],["$","$L5","48",{"className":"haskell","children":["max :: Ord p => p -> p -> p\nmax x y = if y > x then y else x\n\ndata X = I | J\n\nmax I J -- 这里报错\n-- error:\n--    • No instance for (Ord X) arising from a use of ‘max’\n--    • In the expression: max I J\n--      In an equation for ‘it’: it = max I J"]}],["$","p",null,{"children":["This"," ","error,"," ","simply"," ","put,"," ","is"," ","that"," ","the"," ","custom"," ","type"," ",["$","code","0",{"children":["X"]}]," ","does"," ","not"," ","implement"," ","the"," ",["$","code","1",{"children":["Ord"]}]," ","type"," ","class,"," ","and"," ","the"," ",["$","strong","2",{"children":["type"," ","signature"]}]," ","of"," ",["$","code","3",{"children":["max"]}]," ","requires"," ","the"," ",["$","code","4",{"children":["Ord"]}]," ","type"," ","class,"," ","so"," ","it"," ","throws"," ","an"," ","error."," ","This"," ","is"," ","still"," ","very"," ","different"," ","from"," ","C++"," ","templates."," ","The"," ","fundamental"," ","difference"," ","is"," ","that"," ","when"," ","type"," ","checking"," ",["$","code","5",{"children":["max I J"]}],","," ","only"," ",["$","code","6",{"children":["max :: Ord p => p -> p -> p"]}]," ","this"," ","information"," ","is"," ","enough,"," ","there"," ","is"," ","no"," ","need"," ","to"," ","know"," ","what"," ","the"," ","function"," ","body"," ","of"," ",["$","code","7",{"children":["max"]}]," ","is,"," ","let"," ","alone"," ",["$","q","8",{"children":["specialize"]}]," ","this"," ","function,"," ","this"," ","is"," ","still"," ","a"," ","deduction"," ","in"," ","the"," ","type"," ","system."]}],["$","h2",null,{"className":"text-3xl","id":"true-or-false-generics-better-performance","children":[["$","$L4",null,{"href":"#true-or-false-generics-better-performance","color":"secondary","className":"pr-3 no-underline hover:underline text-primary font-sans","children":"#"}],["True"," ","or"," ","false"," ","generics?"," ","Better"," ","performance?"]]}],["$","p",null,{"children":["Although"," ","I"," ","don’t"," ","particularly"," ","like"," ","the"," ","Java"," ","language,"," ","the"," ","generic"," ","system"," ","of"," ","the"," ","Java"," ","language"," ","(in"," ","general"," ","cases)"," ","satisfies"," ","Proposition"," ","1.,"," ","it"," ","is"," ","true"," ","parameter"," ","polymorphism."," ","This"," ","is"," ","because"," ","the"," ","predecessor"," ","of"," ","Java"," ","generics–Generic"," ","Java"," ","(GJ)"," ","was"," ","designed"," ","by"," ","real"," ","programming"," ","language"," ","experts"," ","such"," ","as"," ","Philip"," ","Wadler."]}],["$","figure","52",{"children":[["$","div",null,{"children":[["$","img","0",{"src":"https://homepages.inf.ed.ac.uk/wadler/gj/gj-front-full.jpg"}]]}]]}],["$","p",null,{"children":["Some"," ","people"," ","say"," ","that"," ","Java"," ","generics"," ","use"," ","type"," ","erasure,"," ","which"," ","is"," ",["$","q","0",{"children":["fake"," ","generics"]}],","," ","which"," ","is"," ","obviously"," ","influenced"," ","by"," ","the"," ","design"," ","of"," ","c++"," ","templates."," ","In"," ","fact,"," ","it"," ","is"," ","clear"," ","that"," ","the"," ","parameter"," ","type"," ","corresponding"," ","to"," ","parameter"," ","polymorphism"," ","is"," ","more"," ","qualified"," ","to"," ","call"," ","itself"," ",["$","q","1",{"children":["generic"]}],"."," ","c++"," ","is"," ","an"," ","example"," ","of"," ",["$","q","2",{"children":["fake"," ","generics"]}],"."]}],["$","p",null,{"children":["The"," ","design"," ","of"," ","c++"," ","templates"," ","makes"," ","the"," ","module"," ","system"," ","a"," ","difficult"," ","problem."," ","By"," ","2021,"," ","99.9%"," ","of"," ","c++"," ","programs"," ","are"," ","still"," ","using"," ","ancient"," ","header"," ","files–this"," ","complete"," ","garbage–to"," ","simulate"," ","the"," ","module"," ","system."]}],["$","p",null,{"children":["As"," ","for"," ","performance,"," ","the"," ","so-called"," ",["$","q","0",{"children":["specialization"]}]," ","has"," ","two"," ","stronger"," ","concepts"," ","in"," ","programming"," ","languages"," ","that"," ","can"," ","replace"," ","it."]}],["$","ul","56",{"children":[["$","li","0",{"children":["Partial"," ","Evaluation"]}],["$","li","1",{"children":["Inlining"]}]]}],["$","p",null,{"children":["Specialization"," ","can"," ","be"," ","seen"," ","as"," ","an"," ","example"," ","of"," ","partial"," ","evaluation."," ","F#"," ","can"," ","be"," ","decompiled"," ","back"," ","to"," ","C#"," ","through"," ","bytecode,"," ","in"," ",["$","a","0",{"href":"https://sharplab.io","children":["sharplab"]}],","," ","you"," ","can"," ","find"]}],["$","$L5","58",{"className":"fsharp","children":["let select x y = x\n\nlet select2 (x:int) (y:int) = select x y"]}],["$","p",null,{"children":["Such"," ","an"," ","example"," ","will"," ","yield:"]}],["$","$L5","60",{"className":"csharp","children":["using System.Reflection;\nusing Microsoft.FSharp.Core;\n\n[assembly: FSharpInterfaceDataVersion(2, 0, 0)]\n[assembly: AssemblyVersion(\"0.0.0.0\")]\n[CompilationMapping(SourceConstructFlags.Module)]\npublic static class @_\n{\n    [CompilationArgumentCounts(new int[] {\n        1,\n        1\n    })]\n    public static a select<a, b>(a x, b y)\n    {\n        return x;\n    }\n\n    [CompilationArgumentCounts(new int[] {\n        1,\n        1\n    })]\n    public static int select2(int x, int y)\n    {\n        return x;\n    }\n}\nnamespace <StartupCode$_>\n{\n    internal static class $_\n    {\n    }\n}"]}],["$","p",null,{"children":["Isn’t"," ",["$","code","0",{"children":["select2"]}]," ","a"," ",["$","q","1",{"children":["specialization"]}]," ","of"," ",["$","code","2",{"children":["select"]}],"?"," ","From"," ","this"," ","point"," ","of"," ","view,"," ","it’s"," ","hard"," ","to"," ","say"," ","whether"," ","C++"," ","templates"," ","are"," ",["$","q","3",{"children":["better"," ","performing"]}],"."]}],["$","h2",null,{"className":"text-3xl","id":"concept-can-it-solve-the-problem","children":[["$","$L4",null,{"href":"#concept-can-it-solve-the-problem","color":"secondary","className":"pr-3 no-underline hover:underline text-primary font-sans","children":"#"}],["Concept:"," ","Can"," ","it"," ","solve"," ","the"," ","problem?"]]}],["$","p",null,{"children":["Whether"," ","it"," ","is"," ","parametric"," ","polymorphism"," ","seems"," ","to"," ","be"," ","an"," ","academic"," ","question."," ","Non-parametric"," ","polymorphism"," ","mainly"," ","leads"," ","to"," ","potential"," ","errors"," ","when"," ","using"," ","a"," ","parametric"," ","type"," ","(i.e.,"," ","a"," ","type"," ","containing"," ","∀)."," ","If"," ","parametricity"," ","does"," ","not"," ","hold,"," ","some"," ","theorems"," ","(such"," ","as"," ",["$","code","0",{"children":["map f . map g = map (f . g)"]}],")"," ","also"," ","do"," ","not"," ","hold."]}],["$","p",null,{"children":["As"," ","mentioned"," ","before,"," ","Haskell"," ","also"," ","has"," ","problems."," ","Other"," ","ML"," ","family"," ","languages,"," ","if"," ","not"," ","counting"," ","extensions"," ","like"," ","F#’s"," ","object"," ","system,"," ","basically"," ","have"," ","no"," ","problems,"," ","but"," ","they"," ","need"," ","to"," ","pass"," ","more"," ","parameters"," ","or"," ","explicitly"," ","use"," ","the"," ","module"," ","system."," ","The"," ","type"," ","of"," ","F#’s"," ",["$","code","0",{"children":["List.sortWith"]}]," ","is"," ",["$","code","1",{"children":["(('a -> 'a -> int) -> 'a list -> 'a list)"]}],","," ","it"," ","won’t"," ","go"," ","wrong"," ","for"," ","any"," ",["$","code","2",{"children":["'a"]}],","," ","but"," ","it"," ","needs"," ","to"," ","explicitly"," ","pass"," ","a"," ","comparer."]}],["$","p",null,{"children":["So,"," ","non-parametric"," ","polymorphism"," ","may"," ","not"," ","be"," ","a"," ","big"," ","problem."]}],["$","p",null,{"children":["But"," ","when"," ","it"," ","comes"," ","to"," ","C++,"," ","non-parametric"," ","polymorphism"," ","does"," ","bring"," ","a"," ","serious"," ","problem,"," ","that"," ","is,"," ","the"," ","error"," ","messages"," ","given"," ","by"," ","the"," ","template"," ","system"," ","are"," ","often"," ","baffling."]}],["$","p",null,{"children":["For"," ","example,"," ","a"," ","program"," ","like"," ","this:"]}],["$","$L5","68",{"className":"cpp","children":["#include <iostream>\n#include <vector>\n#include <algorithm>\n\nclass A {};\n\nint main() {\n    std::vector<A> v;\n    std::sort(v.begin(), v.end());\n}"]}],["$","p",null,{"children":["Will"," ","produce"," ","200"," ","lines,"," ","19kb"," ","of"," ","errors:"]}],["$","$L5","70",{"className":"text","children":["In file included from .\\test.cpp:3:\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Tools\\MSVC\\14.28.29910\\include\\algorithm:7361:32: error: no matching function for call to object of type 'std::less<>'\n            if (_DEBUG_LT_PRED(_Pred, _Val, *_First)) { // found new earliest element, move to front\n..."]}],["$","p",null,{"children":["To"," ","solve"," ","this"," ","problem,"," ","C++20"," ","introduced"," ","the"," ","concept,"," ","which"," ","draws"," ","on"," ","the"," ","design"," ","of"," ","type"," ","classes"," ","and"," ","Java"," ","generics,"," ","allowing"," ","us"," ","to"," ","write"," ","programs"," ","similar"," ","to"," ","the"," ","previous"," ","Haskell"," ",["$","code","0",{"children":["max"]}],":"]}],["$","$L5","72",{"className":"cpp","children":["#include <iostream>\n#include <algorithm>\n#include <concepts>\n\ntemplate <class T> requires std::equality_comparable<T>\nbool max(T x, T y) {\n    if (x > y) {\n        return x;\n    } else {\n        return y;\n    }\n}"]}],["$","p",null,{"children":["If"," ","you"," ","write"," ","at"," ","this"," ","time:"]}],["$","$L5","74",{"className":"cpp","children":["class A{};\n\nint main() {\n    max(A(), A());\n}"]}],["$","p",null,{"children":["The"," ","compiler"," ","will"," ","report"," ","an"," ","error:"]}],["$","$L5","76",{"className":"text","children":["$d"]}],["$","p",null,{"children":["This"," ","will"," ","directly"," ","indicate"," ","that"," ","A"," ","does"," ","not"," ","satisfy"," ","the"," ",["$","code","0",{"children":["std::equality_comparable"]}]," ","constraint."," ","Even"," ","so,"," ","the"," ","noise"," ","is"," ","still"," ","very"," ","much."," ","More"," ","importantly,"," ","for"," ","library"," ","functions–functions"," ","we"," ","don’t"," ","want"," ","to"," ","study"," ","the"," ","source"," ","code,"," ","the"," ","effect"," ","is"," ","still"," ","general:"]}],["$","$L5","78",{"className":"text","children":["$e"]}],["$","p",null,{"children":["To"," ","be"," ","fair,"," ","the"," ","design"," ","of"," ","C++"," ","templates"," ","also"," ","brings"," ","some"," ","benefits."," ","Although"," ","theoretically,"," ","the"," ","compiler"," ","has"," ","some"," ","general"," ","methods"," ","to"," ","get"," ","the"," ","performance"," ","improvement"," ","brought"," ","by"," ",["$","q","0",{"children":["specialization"]}],","," ","various"," ","practical"," ","difficulties",["$","sup","1",{"children":[["$","a","0",{"href":"#note-1","id":"note-anchor-1","children":["1"]}]]}]," ","make"," ","C++"," ","templates"," ","indeed"," ","have"," ","some"," ","advantages"," ","in"," ","performance"," ","(here"," ","refers"," ","to"," ","runtime"," ","performance,"," ","in"," ","terms"," ","of"," ","compilation"," ","performance,"," ","C++"," ","templates"," ","are"," ","extremely"," ","bad)."]}],["$","p",null,{"children":["Compared"," ","with"," ","language"," ","design"," ","itself,"," ","what"," ","I"," ","dislike"," ","more"," ","is"," ","the"," ","ignorance"," ","of"," ","some"," ","C++"," ","programmers"," ","and"," ","the"," ","arrogant"," ","attitude"," ","brought"," ","by"," ","this"," ","ignorance."," ","Some"," ","people"," ","often"," ","call"," ","Java’s"," ","generics"," ",["$","q","0",{"children":["fake"," ","generics"]}],","," ","thinking"," ","that"," ","only"," ","generics"," ","implementations"," ","like"," ","C++"," ","templates"," ","are"," ",["$","q","1",{"children":["real"," ","generics"]}],"."," ","I"," ","sincerely"," ","suggest"," ","that"," ","these"," ","people"," ","should"," ","read"," ","this"," ","article"," ","carefully."]}],["$","div",null,{"className":"notes","children":[["$","$Lf",null,{"itemId":"1","id":"note-1","children":[["$","p",null,{"children":["There"," ","is"," ","a"," ",["$","a","0",{"href":"https://zhuanlan.zhihu.com/p/456388736","children":["particularly"," ","good"," ","article"]}]," ","on"," ","Zhihu"," ","that"," ","introduces"," ","the"," ","embarrassment"," ","of"," ","languages"," ","like"," ","Haskell"," ","on"," ","this"," ","issue."]}]]}]]}]]}]]}]],null],null]},[["$","div",null,{"className":" relative w-full py-12 shadow-xl shadow-slate-700/20 ring-1 ring-gray-900/5 dark:shadow-slate-100/20 dark:ring-gray-100/5 lg:mx-auto lg:max-w-5xl lg:pt-16 lg:pb-28","children":["$","div",null,{"className":"prose prose-natural dark:prose-invert mx-auto max-w-full px-8 sm:px-16","children":["$","$L10",null,{"parallelRouterKey":"children","segmentPath":["children","$11","children","posts","children","$12","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L13",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/ecc949282143a457.css","precedence":"next","crossOrigin":"$undefined"}]]}]}]}],null],null]},["$","$L10",null,{"parallelRouterKey":"children","segmentPath":["children","$11","children","posts","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L13",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"en","suppressHydrationWarning":true,"children":["$","body",null,{"className":"text-foreground bg-background min-h-screen","children":["$","$L14",null,{"children":["$L15",["$","$L10",null,{"parallelRouterKey":"children","segmentPath":["children","$11","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L13",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]}]}]}],null],null]},[["$","$L10",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L13",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/52457f8b0fc09a26.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/ad2762ca96cee671.css","precedence":"next","crossOrigin":"$undefined"}]]}],null],null],[null,"$L16"]]]]
17:I[53693,["706","static/chunks/706-97ed238ee5a03fb5.js","469","static/chunks/469-7ee2e4c850f58403.js","911","static/chunks/911-e9f556f9b03e931c.js","373","static/chunks/373-fbdb9516436dc720.js","203","static/chunks/app/%5Blocale%5D/layout-a565b40c48425316.js"],"Navbar"]
18:I[53693,["706","static/chunks/706-97ed238ee5a03fb5.js","469","static/chunks/469-7ee2e4c850f58403.js","911","static/chunks/911-e9f556f9b03e931c.js","373","static/chunks/373-fbdb9516436dc720.js","203","static/chunks/app/%5Blocale%5D/layout-a565b40c48425316.js"],"NavbarBrand"]
1a:I[53693,["706","static/chunks/706-97ed238ee5a03fb5.js","469","static/chunks/469-7ee2e4c850f58403.js","911","static/chunks/911-e9f556f9b03e931c.js","373","static/chunks/373-fbdb9516436dc720.js","203","static/chunks/app/%5Blocale%5D/layout-a565b40c48425316.js"],"NavbarItem"]
1d:I[53693,["706","static/chunks/706-97ed238ee5a03fb5.js","469","static/chunks/469-7ee2e4c850f58403.js","911","static/chunks/911-e9f556f9b03e931c.js","373","static/chunks/373-fbdb9516436dc720.js","203","static/chunks/app/%5Blocale%5D/layout-a565b40c48425316.js"],"NavbarContent"]
1e:I[81946,["706","static/chunks/706-97ed238ee5a03fb5.js","469","static/chunks/469-7ee2e4c850f58403.js","911","static/chunks/911-e9f556f9b03e931c.js","373","static/chunks/373-fbdb9516436dc720.js","203","static/chunks/app/%5Blocale%5D/layout-a565b40c48425316.js"],"default"]
1f:I[48125,["706","static/chunks/706-97ed238ee5a03fb5.js","469","static/chunks/469-7ee2e4c850f58403.js","911","static/chunks/911-e9f556f9b03e931c.js","373","static/chunks/373-fbdb9516436dc720.js","203","static/chunks/app/%5Blocale%5D/layout-a565b40c48425316.js"],"default"]
15:["$","$L17",null,{"shouldHideOnScroll":true,"children":[["$","$L18",null,{"className":"flex flex-row gap-4","children":[["$","p",null,{"className":"font-bold text-inherit","children":"$L19"}],["$","$L1a",null,{"children":"$L1b"}],["$","$L1a",null,{"children":"$L1c"}]]}],["$","$L1d",null,{"justify":"end","className":"gap-1","children":[["$","$L1a",null,{"children":["$","$L1e",null,{}]}],["$","$L1a",null,{"children":["$","$L1f",null,{}]}]]}]]}]
16:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Aya's Blog"}],["$","meta","3",{"name":"description","content":"A site powered by next.js and pandoc"}],["$","link","4",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"48x48"}]]
1:null
20:I[9678,["706","static/chunks/706-97ed238ee5a03fb5.js","469","static/chunks/469-7ee2e4c850f58403.js","911","static/chunks/911-e9f556f9b03e931c.js","373","static/chunks/373-fbdb9516436dc720.js","203","static/chunks/app/%5Blocale%5D/layout-a565b40c48425316.js"],"default"]
19:["$","$L20",null,{"locale":"en","localePrefix":"always","href":"/","aria-label":"Home","children":"Home"}]
1b:["$","$L20",null,{"locale":"en","localePrefix":"always","href":"/blog/","className":"font-bold","aria-label":"Blog","children":"Blog"}]
1c:["$","$L20",null,{"locale":"en","localePrefix":"always","href":"/favorites/","className":"font-bold","aria-label":"Favorites","children":"Favorites"}]
