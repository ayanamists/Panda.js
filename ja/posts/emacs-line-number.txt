2:"$Sreact.fragment"
3:I[37006,["945","static/chunks/945-45c92e2d248fab37.js","786","static/chunks/786-c6fa5cb99b8c7140.js","807","static/chunks/807-c8470476b2b24d30.js","827","static/chunks/app/%5Blocale%5D/posts/%5Bslug%5D/page-cadedd2465269073.js"],"default"]
4:I[65469,["945","static/chunks/945-45c92e2d248fab37.js","786","static/chunks/786-c6fa5cb99b8c7140.js","807","static/chunks/807-c8470476b2b24d30.js","827","static/chunks/app/%5Blocale%5D/posts/%5Bslug%5D/page-cadedd2465269073.js"],""]
5:I[39926,["945","static/chunks/945-45c92e2d248fab37.js","786","static/chunks/786-c6fa5cb99b8c7140.js","807","static/chunks/807-c8470476b2b24d30.js","827","static/chunks/app/%5Blocale%5D/posts/%5Bslug%5D/page-cadedd2465269073.js"],"default"]
7:I[27377,["945","static/chunks/945-45c92e2d248fab37.js","786","static/chunks/786-c6fa5cb99b8c7140.js","807","static/chunks/807-c8470476b2b24d30.js","827","static/chunks/app/%5Blocale%5D/posts/%5Bslug%5D/page-cadedd2465269073.js"],"default"]
8:I[78703,[],""]
b:I[53751,[],""]
c:I[59576,["945","static/chunks/945-45c92e2d248fab37.js","327","static/chunks/327-1450e5f44eb18d82.js","786","static/chunks/786-c6fa5cb99b8c7140.js","256","static/chunks/256-7bc8f523a9d252a9.js","203","static/chunks/app/%5Blocale%5D/layout-54c8e01b9c8af01a.js"],"Providers"]
6:T899,(defun spacemacs//linum-enabled-for-current-major-mode ()
  "Return non-nil if line number is enabled for current major-mode."
  (let* ((disabled-for-modes
          (spacemacs/mplist-get-values dotspacemacs-line-numbers
                                       :disabled-for-modes))
         (user-enabled-for-modes
          (spacemacs/mplist-get-values dotspacemacs-line-numbers
                                       :enabled-for-modes))
         ;; default `enabled-for-modes' to '(prog-mode text-mode), because it is
         ;; a more sensible default than enabling in all buffers - including
         ;; Magit buffers, terminal buffers, etc. But don't include prog-mode or
         ;; text-mode if they're explicitly disabled by user
         (enabled-for-modes (or user-enabled-for-modes
                                (seq-difference '(prog-mode text-mode)
                                                disabled-for-modes
                                                #'eq)))
         (enabled-for-parent (or (and (equal enabled-for-modes '(all)) 'all)
                                 (apply #'derived-mode-p enabled-for-modes)))
         (disabled-for-parent (apply #'derived-mode-p disabled-for-modes)))
    (or
     ;; special case 'all: enable for any mode that isn't specifically disabled
     (and (eq enabled-for-parent 'all) (not disabled-for-parent))
     ;; current mode or a parent is in :enabled-for-modes, and there isn't a
     ;; more specific parent (or the mode itself) in :disabled-for-modes
     (and enabled-for-parent
          (or (not disabled-for-parent)
              ;; handles the case where current major-mode has a parent both in
              ;; :enabled-for-modes and in :disabled-for-modes. Return non-nil
              ;; if enabled-for-parent is the more specific parent (IOW derives
              ;; from disabled-for-parent)
              (spacemacs/derived-mode-p enabled-for-parent disabled-for-parent)))
     ;; current mode (or parent) not explicitly disabled
     (and (null user-enabled-for-modes)
          enabled-for-parent            ; mode is one of default allowed modes
          disabled-for-modes
          (not disabled-for-parent)))))9:["locale","ja","d"]
a:["slug","emacs-line-number","d"]
0:["irBRDB7iEcu_ivzp3l0th",[[["",{"children":[["locale","ja","d"],{"children":["posts",{"children":[["slug","emacs-line-number","d"],{"children":["__PAGE__?{\"locale\":\"ja\",\"slug\":\"emacs-line-number\"}",{}]}]}]}]},"$undefined","$undefined",true],["",{"children":[["locale","ja","d"],{"children":["posts",{"children":[["slug","emacs-line-number","d"],{"children":["__PAGE__",{},[["$L1",["$","main",null,{"children":[["$","h1",null,{"className":"text-4xl font-bold mb-2","children":"coq-modeで行番号を表示する方法"}],["$","div",null,{"className":"text-sm text-gray-500 mb-5","children":"12/4/2023"}],["$","$2","0",{"children":[["$","$L3",null,{"type":"warning","children":[["$","p",null,{"children":["この記事はChatGPTによって中国語から翻訳されたもので、いくつかの誤りが含まれているかもしれません。不正確な部分があればご了承ください。"]}]]}],["$","p",null,{"children":["行番号（Line"," ","Number）の表示は、問題になるべきではないように思えます。vscodeのリポジトリには、行番号の表示をどのように簡単にオフにするかを尋ねる",["$","a","0",{"href":"https://github.com/Microsoft/vscode/issues/52735","children":["issue"]}],"があります。Vimユーザーにとっては、",["$","code","1",{"children":["set :number"]}],"と一言言えば行番号が表示されます。"]}],["$","p",null,{"children":["そう、Emacsはそういう特別なエディタなのです。私のようなたまに使うユーザーにとって、行番号の表示は実際に問題になります。"]}],["$","h2",null,{"className":"text-3xl","id":"問題は何か","children":[["$","$L4",null,{"href":"#問題は何か","color":"secondary","className":"pr-3 no-underline hover:underline","children":"#"}],["問題は何か"]]}],["$","p",null,{"children":["私が使用しているのはEmacsのディストリビューション、あるいは成熟した設定ファイルである",["$","a","0",{"href":"https://www.spacemacs.org/","children":["Spacemacs"]}],"です。Spacemacsの公式ドキュメントによれば、行番号を表示するには、",["$","code","1",{"children":[".spacemacs"]}],"で変数を設定するだけでよいようです："]}],["$","$L5","5",{"className":"elisp","children":["(setq-default dotspacemacs-line-numbers t)"]}],["$","p",null,{"children":["この文は、",["$","code","0",{"children":["dotspacemacs-line-numbers"]}],"を",["$","code","1",{"children":["t"]}],"に設定するという意味です。"]}],["$","p",null,{"children":["また、coq言語をサポートするために、私は",["$","code","0",{"children":["coq"]}],"レイヤーをロードしました。しかし、coqファイルを開くと、驚くことに、この時点ではcoqのソースコードには行番号が表示されません："]}],["$","figure","8",{"children":[["$","div",null,{"children":[["$","img","0",{"src":"https://pic.superbed.cc/item/656efcb312f8d922c1008d4a.png"}]]}]]}],["$","p",null,{"children":["通常の直感では、",["$","code","0",{"children":["t"]}],"に設定するとすべての状況で行番号が表示されるはずです。では、なぜ行番号が表示されないのでしょうか？"]}],["$","h2",null,{"className":"text-3xl","id":"一時的な解決策","children":[["$","$L4",null,{"href":"#一時的な解決策","color":"secondary","className":"pr-3 no-underline hover:underline","children":"#"}],["一時的な解決策"]]}],["$","p",null,{"children":["この問題を解決するのは、原因を理解するよりも簡単です。"]}],["$","p",null,{"children":["少し検索してみると、",["$","code","0",{"children":["spc t n"]}]," ",["$","sup","1",{"children":[["$","a","0",{"href":"#note-1","id":"note-anchor-1","children":["1"]}]]}],"で現在のバッファに行番号を表示できることがわかりました。これは確かに問題を解決します。Emacs"," ","wikiによれば、このショートカットは実際にはEmacs"," ","26.1以降で導入された行番号コマンド",["$","code","2",{"children":["display-line-numbers-mode"]}],"を呼び出しています。"]}],["$","p",null,{"children":["Emacsのコマンドは",["$","code","0",{"children":["m-x"]}],"や",["$","code","1",{"children":["spc spc"]}],"で実行できます。実際には、コマンドはEmacs"," ","Lispの関数で、Programming"," ","Elispの",["$","a","2",{"href":"https://www.gnu.org/software/emacs/manual/html_node/eintr/Interactive-multiply_002dby_002dseven.html","children":["ドキュメント"]}],"によれば、関数定義に",["$","code","3",{"children":["(interactive)"]}],"がある場合、それはコマンドとして呼び出すことができます。"]}],["$","p",null,{"children":["明らかに、Spacemacsもこの関数を使って行番号の設定を行っています。なぜSpacemacsが私の"," ",["$","code","0",{"children":[".v"]}]," ","ファイルに行番号を開けなかったのかはわかりませんが、自分で開くことができます。"]}],["$","p",null,{"children":[["$","code","0",{"children":["coq"]}]," ","レイヤーは実際には"," ",["$","code","1",{"children":["coq-mode"]}]," ","を使用しています。",["$","code","2",{"children":["coq-mode"]}]," ","はEmacsの",["$","a","3",{"href":"https://www.gnu.org/software/emacs/manual/html_node/emacs/Major-Modes.html","children":["メジャーモード（Major"," ","Mode）"]}],"の一つで、coq言語のサポートを提供し、多くのショートカットキーを定義しています。"]}],["$","p",null,{"children":["Emacsは"," ",["$","a","0",{"href":"https://www.gnu.org/software/emacs/manual/html_node/emacs/Hooks.html","children":["Hooks"]}]," ","というメカニズムをサポートしており、特定のモードがロードされたときに一連の操作を実行することができます。Spacemacsが"," ",["$","code","1",{"children":["coq-mode"]}]," ","に行番号を開けないのであれば、このメカニズムを使って手動で"," ",["$","code","2",{"children":["display-line-numbers-mode"]}]," ","を実行します。"]}],["$","$L5","17",{"className":"elisp","children":["(defun dotspacemacs/user-config ()\n  \"Configuration for user code:\nThis function is called at the very end of Spacemacs startup, after layer\nconfiguration.\nPut your configuration code here, except for variables that should be set\nbefore packages are loaded.\"\n  (add-hook 'coq-mode-hook (lambda () (display-line-numbers-mode 1)))\n)"]}],["$","p",null,{"children":["ここでの"," ",["$","code","0",{"children":["dotspacemacs/user-config"]}]," ","はSpacemacsの設定ファイルの一部で、ここで一部のカスタム操作を実行することができます。"]}],["$","p",null,{"children":["これで問題は解決しました。実は、Spacemacsのドキュメントでは"," ",["$","code","0",{"children":[":enabled-for-modes"]}]," ","というオプションも紹介しています。このオプションに"," ",["$","code","1",{"children":["coq-mode"]}]," ","を追加すると、問題が直接解決します。しかし、私が問題の原因を完全に理解するまで、このオプションの存在に気づきませんでした。"]}],["$","$L5","20",{"className":"elisp","children":["(setq-default dotspacemacs-line-numbers\n  '(:enabled-for-modes coq-mode))"]}],["$","h2",null,{"className":"text-3xl","id":"なぜ","children":[["$","$L4",null,{"href":"#なぜ","color":"secondary","className":"pr-3 no-underline hover:underline","children":"#"}],["なぜ"]]}],["$","p",null,{"children":["私が最初に気づいたのは"," ",["$","code","0",{"children":["dotspacemacs-line-numbers"]}]," ","のコメントです："]}],["$","$L5","23",{"className":"elisp","children":[";; Control line numbers activation.\n;; If set to `t', `relative' or `visual' then line numbers are enabled in all\n;; `prog-mode' and `text-mode' derivatives. If set to `relative', line\n;; numbers are relative. If set to `visual', line numbers are also relative,\n;; but only visual lines are counted. For example, folded lines will not be\n;; counted and wrapped lines are counted as multiple lines.\n;; This variable can also be set to a property list for finer control:\n;; (default nil)"]}],["$","p",null,{"children":["このコメントでは、この変数を"," ",["$","code","0",{"children":["t"]}]," ","に設定すると、デフォルトで"," ",["$","code","1",{"children":["prog-mode"]}]," ","と"," ",["$","code","2",{"children":["text-mode"]}]," ","の行番号が有効になると述べています。これらのモードは"," ",["$","a","3",{"href":"https://www.gnu.org/software/emacs/manual/html_node/elisp/Basic-Major-Modes.html","children":["Basic"," ","Major"," ","Mode"]}]," ","と呼ばれています。自然な推測は、",["$","code","4",{"children":["coq-mode"]}]," ","はその一部ではないということです。"]}],["$","p",null,{"children":["coq"," ","ファイルを開き、",["$","code","0",{"children":["m-x describe-mode"]}]," ","を実行すると、次のように表示されます："]}],["$","$L5","26",{"children":["Coq mode defined in ‘coq-mode.el’:\nMajor mode for Coq scripts."]}],["$","p",null,{"children":[["$","code","0",{"children":["coq-mode.el"]}]," ","のソースコードを見てみると、秘密は"," ","182"," ","行目にあります："]}],["$","$L5","28",{"className":"elisp","children":["(defun coq--parent-mode ()\n  (if coq-use-pg (proof-mode) (prog-mode)))\n\n;;;###autoload\n(define-derived-mode coq-mode coq--parent-mode \"Coq\"\n  \"Major mode for Coq scripts."]}],["$","p",null,{"children":["この"," ",["$","code","0",{"children":["coq--parent-mode"]}]," ","は明らかに"," ",["$","code","1",{"children":["coq-mode"]}]," ","の親モード（parent"," ","mode）で、Emacsのモードにも継承ツリーがあり、一つのモードが他の親モードを継承します。このツリーのルートは確定していませんが、いくつかのケースがあります："]}],["$","ul","30",{"children":[["$","li","0",{"children":["自分自身"]}],["$","li","1",{"children":["Fundamental"," ","Mode"]}],["$","li","2",{"children":["Basic"," ","Major"," ","Mode"]}]]}],["$","p",null,{"children":["私の環境では"," ",["$","code","0",{"children":["coq-use-pg"]}]," ","の値は"," ",["$","code","1",{"children":["t"]}]," ","で、その親モードは"," ",["$","code","2",{"children":["proof-mode"]}]," ","です。では、",["$","code","3",{"children":["proof-mode"]}]," ","の親モードは何でしょうか？"]}],["$","p",null,{"children":["StackOverflow"," ","の",["$","a","0",{"href":"https://emacs.stackexchange.com/questions/58073/how-to-find-inheritance-of-modes","children":["ある質問"]}],"では、関連するコードが提供されています："]}],["$","$L5","33",{"className":"elisp","children":["(defun derived-modes (mode)\n  \"Return a list of the ancestor modes that MODE is derived from.\"\n  (let ((modes   ())\n        (parent  nil))\n    (while (setq parent (get mode 'derived-mode-parent))\n      (push parent modes)\n      (setq mode parent))\n    (setq modes  (nreverse modes))))"]}],["$","p",null,{"children":["この関数を使うと、いくつかの「通常」のモードの継承パスを得ることができます。例えば、先ほど話した"," ",["$","code","0",{"children":["proof-mode"]}],":"]}],["$","$L5","35",{"className":"elisp","children":["ELISP> (derived-modes 'proof-mode)\n(prog-mode)"]}],["$","p",null,{"children":["はい、",["$","code","0",{"children":["proof-mode"]}]," ","の親モードは"," ",["$","code","1",{"children":["prog-mode"]}]," ","です。もし先ほどのドキュメントを覚えているなら、",["$","code","2",{"children":["prog-mode"]}]," ","は"," ",["$","code","3",{"children":["dotspacemacs-line-numbers"]}]," ","が"," ",["$","code","4",{"children":["t"]}]," ","に設定されているときにも行番号を表示するはずです。"]}],["$","p",null,{"children":["では、一体何が間違っているのでしょうか？この関数に"," ",["$","code","0",{"children":["'coq-mode"]}]," ","を入力してみましょう："]}],["$","$L5","38",{"className":"elisp","children":["ELISP> (derived-modes 'coq-mode)\n(coq--parent-mode)"]}],["$","p",null,{"children":["出力は"," ",["$","code","0",{"children":["(coq--parent-mode)"]}]," ","で、これは親モードのシンボルであり、評価後の親モードではありません。したがって、",["$","code","1",{"children":["(get 'coq-mode 'derived-parent-mode)"]}]," ","という式は構文上のシンボルしか取得できず、実際の親モードは取得できません。",["$","code","2",{"children":["define-derived-mode"]}]," ","のソースコードを調べると、",["$","code","3",{"children":["(get mode 'derived-mode-parent)"]}]," ","が取得するのは、この文が設定する親モードであることがわかります："]}],["$","$L5","40",{"className":"elisp","children":["(put ',child 'derived-mode-parent ',parent)"]}],["$","p",null,{"children":["では、Spacemacsは親モードをどのように取得しているのでしょうか？Spacemacsは"," ",["$","code","0",{"children":["spacemacs/layers/+spacemacs/spacemacs-defaults/funcs.el"]}]," ","の"," ",["$","code","1",{"children":["spacemacs//linum-enabled-for-current-major-mode"]}]," ","関数で、現在のモードで行番号表示が有効になっているかどうかをチェックします："]}],["$","$L5","42",{"className":"elisp","children":["$6"]}],["$","p",null,{"children":["見ての通り、それは"," ",["$","code","0",{"children":["derived-mode-p"]}]," ","関数を使って現在のバッファの"," ","major"," ","mode"," ","が予設の"," ",["$","code","1",{"children":["enabled-for-modes"]}]," ","の子モードであるかどうかを問い合わせています。",["$","code","2",{"children":["dervied-mode-p"]}]," ","はEmacsが提供する関数で、",["$","a","3",{"href":"https://doc.endlessparentheses.com/Fun/derived-mode-p.html","children":["ドキュメント"]}],"によれば、現在のバッファの主モードが"," ",["$","code","4",{"children":["modes"]}]," ","の子モードであれば、",["$","code","5",{"children":["(derived-mode-p modes)"]}]," ","は非"," ",["$","code","6",{"children":["nil"]}]," ","値を返します。"]}],["$","p",null,{"children":[["$","code","0",{"children":["derived-mode-p"]}]," ","のソースコードをさらにチェックすると、問題の根源がついに明らかになります。"]}],["$","$L5","45",{"className":"elisp","children":["(defun provided-mode-derived-p (mode &rest modes)\n  \"Non-nil if MODE is derived from one of MODES or their aliases.\nUses the `derived-mode-parent' property of the symbol to trace backwards.\nIf you just want to check `major-mode', use `derived-mode-p'.\"\n  (while\n      (and\n       (not (memq mode modes))\n       (let* ((parent (get mode 'derived-mode-parent))\n              (parentfn (symbol-function parent)))\n         (setq mode (if (and parentfn (symbolp parentfn)) parentfn parent)))))\n  mode)\n\n(defun derived-mode-p (&rest modes)\n  \"Non-nil if the current major mode is derived from one of MODES.\nUses the `derived-mode-parent' property of the symbol to trace backwards.\"\n  (apply #'provided-mode-derived-p major-mode modes))"]}],["$","p",null,{"children":[["$","code","0",{"children":["dervied-mode-p"]}]," ","もまた"," ",["$","code","1",{"children":["(get mode 'derived-mode-parent)"]}]," ","を使って特定のモードの親モードを取得していますが、これは"," ",["$","code","2",{"children":["coq-mode"]}]," ","に対しては"," ",["$","code","3",{"children":["coq--parent-mode"]}]," ","を返し、ここで継承チェーンが断絶します。"]}],["$","p",null,{"children":["Emacsのモード定義は最終的には関数を定義します。しかし、もし"," ",["$","code","0",{"children":["'parent"]}]," ","が正しい親モードを評価できなければ、Emacsのモードに対する予設関数は期待した結果を得られません。明らかに、",["$","code","1",{"children":["coq-mode"]}]," ","は"," ",["$","code","2",{"children":["coq--parent-mode"]}]," ","をこのように定義すべきではありません。では、",["$","code","3",{"children":["coq--parent-mode"]}]," ","はどのように定義すべきなのでしょうか？"]}],["$","h2",null,{"className":"text-3xl","id":"最終的な解決策","children":[["$","$L4",null,{"href":"#最終的な解決策","color":"secondary","className":"pr-3 no-underline hover:underline","children":"#"}],["最終的な解決策"]]}],["$","p",null,{"children":["Emacs"," ","Lispのグローバル変数とグローバル関数は異なり、これはSchemeとは大いに異なります。もし"," ",["$","code","0",{"children":["coq--parent-mode"]}]," ","を直接変数として定義すると、",["$","code","1",{"children":["coq-mode"]}]," ","はロードできなくなります。"]}],["$","$L5","50",{"className":"elisp","children":["(defvar coq--parent-mode\n  (if coq-use-pg 'proof-mode 'prog-mode))"]}],["$","p",null,{"children":["幸運なことに、Emacs"," ","Lispには"," ",["$","code","0",{"children":["defalias"]}]," ","という関数があり、これを使って"," ",["$","code","1",{"children":["coq--parent-mode"]}]," ","をエイリアスとして定義することができます。"]}],["$","$L5","52",{"className":"elisp","children":["(defalias 'coq--parent-mode\n  (if coq-use-pg 'proof-mode 'prog-mode))"]}],["$","p",null,{"children":["上記の修正だけで、Spacemacsは"," ",["$","code","0",{"children":["coq-mode"]}]," ","が"," ",["$","code","1",{"children":["prog-mode"]}]," ","から派生していることを自動的に検出し、行番号の表示を開始できます。私はすでに"," ",["$","a","2",{"href":"https://github.com/ProofGeneral/PG/pull/717","children":["PR"]}]," ","を提出し、主分支にマージしました。"]}],["$","div",null,{"className":"notes","children":[["$","$L7",null,{"itemId":"1","id":"note-1","children":[["$","p",null,{"children":["このようなショートカットキーの記法に慣れていない場合は、",["$","a","0",{"href":"https://kb.iu.edu/d/aghb","children":["ドキュメント"]}],"を参照してください。"]}]]}]]}]]}]]}]],null],null]},[["$","div",null,{"className":" relative w-full px-6 py-12 shadow-xl  shadow-slate-700/20 ring-1 ring-gray-900/5 dark:shadow-slate-300/20 dark:ring-gray-100/5 dark:shadow-slate-900/10 md:max-w-3xl md:mx-auto lg:max-w-4xl lg:pt-16 lg:pb-28 prose prose-natural dark:prose-invert","children":["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children","$9","children","posts","children","$a","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Lb",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/ecc949282143a457.css","precedence":"next","crossOrigin":"$undefined"}]]}]}],null],null]},["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children","$9","children","posts","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Lb",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"ja","suppressHydrationWarning":true,"children":["$","body",null,{"className":"__className_aaf875 text-foreground bg-background min-h-screen","children":["$","$Lc",null,{"children":["$Ld",["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children","$9","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Lb",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]}]}]}],null],null]},[["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Lb",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/2f71e0d51b6954c9.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/cb36c8a6d34b9690.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","2",{"rel":"stylesheet","href":"/_next/static/css/ad2762ca96cee671.css","precedence":"next","crossOrigin":"$undefined"}]]}],null],null],[null,"$Le"]]]]
f:I[56875,["945","static/chunks/945-45c92e2d248fab37.js","327","static/chunks/327-1450e5f44eb18d82.js","786","static/chunks/786-c6fa5cb99b8c7140.js","256","static/chunks/256-7bc8f523a9d252a9.js","203","static/chunks/app/%5Blocale%5D/layout-54c8e01b9c8af01a.js"],"Navbar"]
10:I[56875,["945","static/chunks/945-45c92e2d248fab37.js","327","static/chunks/327-1450e5f44eb18d82.js","786","static/chunks/786-c6fa5cb99b8c7140.js","256","static/chunks/256-7bc8f523a9d252a9.js","203","static/chunks/app/%5Blocale%5D/layout-54c8e01b9c8af01a.js"],"NavbarBrand"]
12:I[56875,["945","static/chunks/945-45c92e2d248fab37.js","327","static/chunks/327-1450e5f44eb18d82.js","786","static/chunks/786-c6fa5cb99b8c7140.js","256","static/chunks/256-7bc8f523a9d252a9.js","203","static/chunks/app/%5Blocale%5D/layout-54c8e01b9c8af01a.js"],"NavbarItem"]
14:I[56875,["945","static/chunks/945-45c92e2d248fab37.js","327","static/chunks/327-1450e5f44eb18d82.js","786","static/chunks/786-c6fa5cb99b8c7140.js","256","static/chunks/256-7bc8f523a9d252a9.js","203","static/chunks/app/%5Blocale%5D/layout-54c8e01b9c8af01a.js"],"NavbarContent"]
15:I[81946,["945","static/chunks/945-45c92e2d248fab37.js","327","static/chunks/327-1450e5f44eb18d82.js","786","static/chunks/786-c6fa5cb99b8c7140.js","256","static/chunks/256-7bc8f523a9d252a9.js","203","static/chunks/app/%5Blocale%5D/layout-54c8e01b9c8af01a.js"],"default"]
16:I[48125,["945","static/chunks/945-45c92e2d248fab37.js","327","static/chunks/327-1450e5f44eb18d82.js","786","static/chunks/786-c6fa5cb99b8c7140.js","256","static/chunks/256-7bc8f523a9d252a9.js","203","static/chunks/app/%5Blocale%5D/layout-54c8e01b9c8af01a.js"],"default"]
d:["$","$Lf",null,{"shouldHideOnScroll":true,"children":[["$","$L10",null,{"className":"flex flex-row gap-4","children":[["$","p",null,{"className":"font-bold text-inherit","children":"$L11"}],["$","$L12",null,{"children":"$L13"}]]}],["$","$L14",null,{"justify":"end","children":[["$","$L12",null,{"children":["$","$L15",null,{}]}],["$","$L12",null,{"children":["$","$L16",null,{}]}]]}]]}]
e:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Aya's Blog"}],["$","meta","3",{"name":"description","content":"A site powered by next.js and pandoc"}],["$","link","4",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"48x48"}],["$","meta","5",{"name":"next-size-adjust"}]]
1:null
17:I[8269,["945","static/chunks/945-45c92e2d248fab37.js","327","static/chunks/327-1450e5f44eb18d82.js","786","static/chunks/786-c6fa5cb99b8c7140.js","256","static/chunks/256-7bc8f523a9d252a9.js","203","static/chunks/app/%5Blocale%5D/layout-54c8e01b9c8af01a.js"],"default"]
11:["$","$L17",null,{"locale":"ja","localePrefix":"always","href":"/","children":"ホーム"}]
13:["$","$L17",null,{"locale":"ja","localePrefix":"always","href":"/blog/","className":"font-bold","children":"ブログ"}]
